// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

mod action;
pub use self::action::Action;

mod action_group;
pub use self::action_group::ActionGroup;

mod action_map;
pub use self::action_map::ActionMap;

mod app_info;
pub use self::app_info::AppInfo;

mod app_info_monitor;
pub use self::app_info_monitor::AppInfoMonitor;

mod app_launch_context;
pub use self::app_launch_context::AppLaunchContext;

mod application;
pub use self::application::Application;

mod application_command_line;
pub use self::application_command_line::ApplicationCommandLine;

mod async_initable;
pub use self::async_initable::AsyncInitable;

mod async_result;
pub use self::async_result::AsyncResult;

mod buffered_input_stream;
pub use self::buffered_input_stream::BufferedInputStream;

mod buffered_output_stream;
pub use self::buffered_output_stream::BufferedOutputStream;

mod bytes_icon;
pub use self::bytes_icon::BytesIcon;

mod cancellable;
pub use self::cancellable::Cancellable;

mod charset_converter;
pub use self::charset_converter::CharsetConverter;

mod converter;
pub use self::converter::Converter;

mod converter_input_stream;
pub use self::converter_input_stream::ConverterInputStream;

mod converter_output_stream;
pub use self::converter_output_stream::ConverterOutputStream;

mod credentials;
pub use self::credentials::Credentials;

mod dbus_action_group;
pub use self::dbus_action_group::DBusActionGroup;

mod dbus_auth_observer;
pub use self::dbus_auth_observer::DBusAuthObserver;

mod dbus_connection;
pub use self::dbus_connection::DBusConnection;

mod dbus_interface;
pub use self::dbus_interface::DBusInterface;

mod dbus_interface_skeleton;
pub use self::dbus_interface_skeleton::DBusInterfaceSkeleton;

mod dbus_menu_model;
pub use self::dbus_menu_model::DBusMenuModel;

mod dbus_message;
pub use self::dbus_message::DBusMessage;

mod dbus_method_invocation;
pub use self::dbus_method_invocation::DBusMethodInvocation;

mod dbus_object;
pub use self::dbus_object::DBusObject;

mod dbus_object_manager;
pub use self::dbus_object_manager::DBusObjectManager;

mod dbus_object_manager_server;
pub use self::dbus_object_manager_server::DBusObjectManagerServer;

mod dbus_object_proxy;
pub use self::dbus_object_proxy::DBusObjectProxy;

mod dbus_object_skeleton;
pub use self::dbus_object_skeleton::DBusObjectSkeleton;

mod dbus_proxy;
pub use self::dbus_proxy::DBusProxy;

mod dbus_server;
pub use self::dbus_server::DBusServer;

mod data_input_stream;
pub use self::data_input_stream::DataInputStream;

mod data_output_stream;
pub use self::data_output_stream::DataOutputStream;

mod datagram_based;
pub use self::datagram_based::DatagramBased;

#[cfg(feature = "v2_72")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_72")))]
mod debug_controller;
#[cfg(feature = "v2_72")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_72")))]
pub use self::debug_controller::DebugController;

#[cfg(feature = "v2_72")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_72")))]
mod debug_controller_dbus;
#[cfg(feature = "v2_72")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_72")))]
pub use self::debug_controller_dbus::DebugControllerDBus;

#[cfg(all(not(windows), not(target_os = "macos")))]
#[cfg_attr(docsrs, doc(cfg(all(not(windows), not(target_os = "macos")))))]
mod desktop_app_info;
#[cfg(all(not(windows), not(target_os = "macos")))]
#[cfg_attr(docsrs, doc(cfg(all(not(windows), not(target_os = "macos")))))]
pub use self::desktop_app_info::DesktopAppInfo;

mod drive;
pub use self::drive::Drive;

mod dtls_client_connection;
pub use self::dtls_client_connection::DtlsClientConnection;

mod dtls_connection;
pub use self::dtls_connection::DtlsConnection;

mod dtls_server_connection;
pub use self::dtls_server_connection::DtlsServerConnection;

mod emblem;
pub use self::emblem::Emblem;

mod emblemed_icon;
pub use self::emblemed_icon::EmblemedIcon;

mod file;
pub use self::file::File;

mod file_enumerator;
pub use self::file_enumerator::FileEnumerator;

mod file_io_stream;
pub use self::file_io_stream::FileIOStream;

mod file_icon;
pub use self::file_icon::FileIcon;

mod file_info;
pub use self::file_info::FileInfo;

mod file_input_stream;
pub use self::file_input_stream::FileInputStream;

mod file_monitor;
pub use self::file_monitor::FileMonitor;

mod file_output_stream;
pub use self::file_output_stream::FileOutputStream;

mod filename_completer;
pub use self::filename_completer::FilenameCompleter;

mod filter_input_stream;
pub use self::filter_input_stream::FilterInputStream;

mod filter_output_stream;
pub use self::filter_output_stream::FilterOutputStream;

mod io_stream;
pub use self::io_stream::IOStream;

mod icon;
pub use self::icon::Icon;

mod inet_address;
pub use self::inet_address::InetAddress;

mod inet_address_mask;
pub use self::inet_address_mask::InetAddressMask;

mod inet_socket_address;
pub use self::inet_socket_address::InetSocketAddress;

mod initable;
pub use self::initable::Initable;

mod input_stream;
pub use self::input_stream::InputStream;

mod list_model;
pub use self::list_model::ListModel;

mod list_store;
pub use self::list_store::ListStore;

mod loadable_icon;
pub use self::loadable_icon::LoadableIcon;

mod memory_input_stream;
pub use self::memory_input_stream::MemoryInputStream;

#[cfg(feature = "v2_64")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_64")))]
mod memory_monitor;
#[cfg(feature = "v2_64")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_64")))]
pub use self::memory_monitor::MemoryMonitor;

mod memory_output_stream;
pub use self::memory_output_stream::MemoryOutputStream;

mod menu;
pub use self::menu::Menu;

mod menu_attribute_iter;
pub use self::menu_attribute_iter::MenuAttributeIter;

mod menu_item;
pub use self::menu_item::MenuItem;

mod menu_link_iter;
pub use self::menu_link_iter::MenuLinkIter;

mod menu_model;
pub use self::menu_model::MenuModel;

mod mount;
pub use self::mount::Mount;

mod mount_operation;
pub use self::mount_operation::MountOperation;

mod native_socket_address;
pub use self::native_socket_address::NativeSocketAddress;

mod native_volume_monitor;
pub use self::native_volume_monitor::NativeVolumeMonitor;

mod network_address;
pub use self::network_address::NetworkAddress;

mod network_monitor;
pub use self::network_monitor::NetworkMonitor;

mod network_service;
pub use self::network_service::NetworkService;

mod notification;
pub use self::notification::Notification;

mod output_stream;
pub use self::output_stream::OutputStream;

mod permission;
pub use self::permission::Permission;

mod pollable_input_stream;
pub use self::pollable_input_stream::PollableInputStream;

mod pollable_output_stream;
pub use self::pollable_output_stream::PollableOutputStream;

#[cfg(feature = "v2_70")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_70")))]
mod power_profile_monitor;
#[cfg(feature = "v2_70")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_70")))]
pub use self::power_profile_monitor::PowerProfileMonitor;

mod property_action;
pub use self::property_action::PropertyAction;

mod proxy;
pub use self::proxy::Proxy;

mod proxy_address;
pub use self::proxy_address::ProxyAddress;

mod proxy_address_enumerator;
pub use self::proxy_address_enumerator::ProxyAddressEnumerator;

mod proxy_resolver;
pub use self::proxy_resolver::ProxyResolver;

mod remote_action_group;
pub use self::remote_action_group::RemoteActionGroup;

mod resolver;
pub use self::resolver::Resolver;

mod seekable;
pub use self::seekable::Seekable;

mod settings;
pub use self::settings::Settings;

mod settings_backend;
pub use self::settings_backend::SettingsBackend;

mod simple_action;
pub use self::simple_action::SimpleAction;

mod simple_action_group;
pub use self::simple_action_group::SimpleActionGroup;

mod simple_io_stream;
pub use self::simple_io_stream::SimpleIOStream;

mod simple_permission;
pub use self::simple_permission::SimplePermission;

mod simple_proxy_resolver;
pub use self::simple_proxy_resolver::SimpleProxyResolver;

mod socket;
pub use self::socket::Socket;

mod socket_address;
pub use self::socket_address::SocketAddress;

mod socket_address_enumerator;
pub use self::socket_address_enumerator::SocketAddressEnumerator;

mod socket_client;
pub use self::socket_client::SocketClient;

mod socket_connectable;
pub use self::socket_connectable::SocketConnectable;

mod socket_connection;
pub use self::socket_connection::SocketConnection;

mod socket_control_message;
pub use self::socket_control_message::SocketControlMessage;

mod socket_listener;
pub use self::socket_listener::SocketListener;

mod socket_service;
pub use self::socket_service::SocketService;

mod subprocess;
pub use self::subprocess::Subprocess;

mod subprocess_launcher;
pub use self::subprocess_launcher::SubprocessLauncher;

mod tcp_connection;
pub use self::tcp_connection::TcpConnection;

mod tcp_wrapper_connection;
pub use self::tcp_wrapper_connection::TcpWrapperConnection;

mod test_dbus;
pub use self::test_dbus::TestDBus;

mod themed_icon;
pub use self::themed_icon::ThemedIcon;

mod threaded_socket_service;
pub use self::threaded_socket_service::ThreadedSocketService;

mod tls_backend;
pub use self::tls_backend::TlsBackend;

mod tls_certificate;
pub use self::tls_certificate::TlsCertificate;

mod tls_client_connection;
pub use self::tls_client_connection::TlsClientConnection;

mod tls_connection;
pub use self::tls_connection::TlsConnection;

mod tls_database;
pub use self::tls_database::TlsDatabase;

mod tls_file_database;
pub use self::tls_file_database::TlsFileDatabase;

mod tls_interaction;
pub use self::tls_interaction::TlsInteraction;

mod tls_password;
pub use self::tls_password::TlsPassword;

mod tls_server_connection;
pub use self::tls_server_connection::TlsServerConnection;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_connection;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_connection::UnixConnection;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_credentials_message;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_credentials_message::UnixCredentialsMessage;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_fd_list;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_fd_list::UnixFDList;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_fd_message;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_fd_message::UnixFDMessage;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_input_stream;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_input_stream::UnixInputStream;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_mount_monitor;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_mount_monitor::UnixMountMonitor;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_output_stream;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_output_stream::UnixOutputStream;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_socket_address;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_socket_address::UnixSocketAddress;

mod vfs;
pub use self::vfs::Vfs;

mod volume;
pub use self::volume::Volume;

mod volume_monitor;
pub use self::volume_monitor::VolumeMonitor;

mod zlib_compressor;
pub use self::zlib_compressor::ZlibCompressor;

mod zlib_decompressor;
pub use self::zlib_decompressor::ZlibDecompressor;

mod dbus_arg_info;
pub use self::dbus_arg_info::DBusArgInfo;

mod dbus_interface_info;
pub use self::dbus_interface_info::DBusInterfaceInfo;

mod dbus_method_info;
pub use self::dbus_method_info::DBusMethodInfo;

mod dbus_node_info;
pub use self::dbus_node_info::DBusNodeInfo;

mod dbus_property_info;
pub use self::dbus_property_info::DBusPropertyInfo;

mod dbus_signal_info;
pub use self::dbus_signal_info::DBusSignalInfo;

mod file_attribute_info_list;
pub use self::file_attribute_info_list::FileAttributeInfoList;

mod file_attribute_matcher;
pub use self::file_attribute_matcher::FileAttributeMatcher;

mod resource;
pub use self::resource::Resource;

mod settings_schema;
pub use self::settings_schema::SettingsSchema;

mod settings_schema_key;
pub use self::settings_schema_key::SettingsSchemaKey;

mod settings_schema_source;
pub use self::settings_schema_source::SettingsSchemaSource;

mod srv_target;
pub use self::srv_target::SrvTarget;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_mount_entry;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_mount_entry::UnixMountEntry;

#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
mod unix_mount_point;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::unix_mount_point::UnixMountPoint;

mod enums;
pub use self::enums::BusType;
pub use self::enums::ConverterResult;
pub use self::enums::CredentialsType;
pub use self::enums::DBusError;
pub use self::enums::DBusMessageByteOrder;
pub use self::enums::DBusMessageHeaderField;
pub use self::enums::DBusMessageType;
pub use self::enums::DataStreamByteOrder;
pub use self::enums::DataStreamNewlineType;
pub use self::enums::DriveStartStopType;
pub use self::enums::EmblemOrigin;
pub use self::enums::FileAttributeStatus;
pub use self::enums::FileAttributeType;
pub use self::enums::FileMonitorEvent;
pub use self::enums::FileType;
pub use self::enums::FilesystemPreviewType;
pub use self::enums::IOErrorEnum;
pub use self::enums::IOModuleScopeFlags;
#[cfg(feature = "v2_64")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_64")))]
pub use self::enums::MemoryMonitorWarningLevel;
pub use self::enums::MountOperationResult;
pub use self::enums::NetworkConnectivity;
pub use self::enums::NotificationPriority;
pub use self::enums::PasswordSave;
#[cfg(feature = "v2_60")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_60")))]
pub use self::enums::PollableReturn;
pub use self::enums::ResolverError;
pub use self::enums::ResolverRecordType;
pub use self::enums::ResourceError;
pub use self::enums::SocketClientEvent;
pub use self::enums::SocketFamily;
pub use self::enums::SocketListenerEvent;
pub use self::enums::SocketProtocol;
pub use self::enums::SocketType;
pub use self::enums::TlsAuthenticationMode;
pub use self::enums::TlsCertificateRequestFlags;
#[cfg(feature = "v2_66")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_66")))]
pub use self::enums::TlsChannelBindingError;
#[cfg(feature = "v2_66")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_66")))]
pub use self::enums::TlsChannelBindingType;
pub use self::enums::TlsDatabaseLookupFlags;
pub use self::enums::TlsError;
pub use self::enums::TlsInteractionResult;
#[cfg(feature = "v2_70")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_70")))]
pub use self::enums::TlsProtocolVersion;
#[allow(deprecated)]
pub use self::enums::TlsRehandshakeMode;
#[cfg(unix)]
#[cfg_attr(docsrs, doc(cfg(unix)))]
pub use self::enums::UnixSocketAddressType;
pub use self::enums::ZlibCompressorFormat;

mod flags;
pub use self::flags::AppInfoCreateFlags;
pub use self::flags::ApplicationFlags;
pub use self::flags::AskPasswordFlags;
pub use self::flags::BusNameOwnerFlags;
pub use self::flags::BusNameWatcherFlags;
pub use self::flags::ConverterFlags;
pub use self::flags::DBusCallFlags;
pub use self::flags::DBusCapabilityFlags;
pub use self::flags::DBusConnectionFlags;
pub use self::flags::DBusInterfaceSkeletonFlags;
pub use self::flags::DBusMessageFlags;
pub use self::flags::DBusObjectManagerClientFlags;
pub use self::flags::DBusPropertyInfoFlags;
pub use self::flags::DBusProxyFlags;
pub use self::flags::DBusSendMessageFlags;
pub use self::flags::DBusServerFlags;
pub use self::flags::DBusSignalFlags;
pub use self::flags::DBusSubtreeFlags;
pub use self::flags::DriveStartFlags;
pub use self::flags::FileAttributeInfoFlags;
pub use self::flags::FileCopyFlags;
pub use self::flags::FileCreateFlags;
pub use self::flags::FileMeasureFlags;
pub use self::flags::FileMonitorFlags;
pub use self::flags::FileQueryInfoFlags;
pub use self::flags::IOStreamSpliceFlags;
pub use self::flags::MountMountFlags;
pub use self::flags::MountUnmountFlags;
pub use self::flags::OutputStreamSpliceFlags;
#[cfg(feature = "v2_60")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_60")))]
pub use self::flags::ResolverNameLookupFlags;
pub use self::flags::ResourceFlags;
pub use self::flags::ResourceLookupFlags;
pub use self::flags::SettingsBindFlags;
pub use self::flags::SubprocessFlags;
pub use self::flags::TestDBusFlags;
pub use self::flags::TlsCertificateFlags;
pub use self::flags::TlsDatabaseVerifyFlags;
pub use self::flags::TlsPasswordFlags;

pub(crate) mod functions;

mod constants;
#[cfg(feature = "v2_72")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_72")))]
pub use self::constants::DEBUG_CONTROLLER_EXTENSION_POINT_NAME;
#[cfg(feature = "v2_58")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_58")))]
pub use self::constants::DRIVE_IDENTIFIER_KIND_UNIX_DEVICE;
pub use self::constants::FILE_ATTRIBUTE_ACCESS_CAN_DELETE;
pub use self::constants::FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE;
pub use self::constants::FILE_ATTRIBUTE_ACCESS_CAN_READ;
pub use self::constants::FILE_ATTRIBUTE_ACCESS_CAN_RENAME;
pub use self::constants::FILE_ATTRIBUTE_ACCESS_CAN_TRASH;
pub use self::constants::FILE_ATTRIBUTE_ACCESS_CAN_WRITE;
pub use self::constants::FILE_ATTRIBUTE_DOS_IS_ARCHIVE;
#[cfg(feature = "v2_60")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_60")))]
pub use self::constants::FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT;
pub use self::constants::FILE_ATTRIBUTE_DOS_IS_SYSTEM;
#[cfg(feature = "v2_60")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_60")))]
pub use self::constants::FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG;
pub use self::constants::FILE_ATTRIBUTE_ETAG_VALUE;
pub use self::constants::FILE_ATTRIBUTE_FILESYSTEM_FREE;
pub use self::constants::FILE_ATTRIBUTE_FILESYSTEM_READONLY;
pub use self::constants::FILE_ATTRIBUTE_FILESYSTEM_REMOTE;
pub use self::constants::FILE_ATTRIBUTE_FILESYSTEM_SIZE;
pub use self::constants::FILE_ATTRIBUTE_FILESYSTEM_TYPE;
pub use self::constants::FILE_ATTRIBUTE_FILESYSTEM_USED;
pub use self::constants::FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW;
pub use self::constants::FILE_ATTRIBUTE_GVFS_BACKEND;
pub use self::constants::FILE_ATTRIBUTE_ID_FILE;
pub use self::constants::FILE_ATTRIBUTE_ID_FILESYSTEM;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_CAN_START;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE;
pub use self::constants::FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE;
pub use self::constants::FILE_ATTRIBUTE_OWNER_GROUP;
pub use self::constants::FILE_ATTRIBUTE_OWNER_USER;
pub use self::constants::FILE_ATTRIBUTE_OWNER_USER_REAL;
pub use self::constants::FILE_ATTRIBUTE_PREVIEW_ICON;
pub use self::constants::FILE_ATTRIBUTE_RECENT_MODIFIED;
pub use self::constants::FILE_ATTRIBUTE_SELINUX_CONTEXT;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_COPY_NAME;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_DESCRIPTION;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_EDIT_NAME;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_ICON;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_IS_BACKUP;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_IS_HIDDEN;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_IS_SYMLINK;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_IS_VOLATILE;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_NAME;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_SIZE;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_SORT_ORDER;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_TARGET_URI;
pub use self::constants::FILE_ATTRIBUTE_STANDARD_TYPE;
pub use self::constants::FILE_ATTRIBUTE_THUMBNAILING_FAILED;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAILING_FAILED_LARGE;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAILING_FAILED_NORMAL;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAILING_FAILED_XLARGE;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAILING_FAILED_XXLARGE;
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_IS_VALID;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_LARGE;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_NORMAL;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XLARGE;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XXLARGE;
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_PATH;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_PATH_LARGE;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_PATH_NORMAL;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_PATH_XLARGE;
#[cfg(feature = "v2_76")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_76")))]
pub use self::constants::FILE_ATTRIBUTE_THUMBNAIL_PATH_XXLARGE;
pub use self::constants::FILE_ATTRIBUTE_TIME_ACCESS;
#[cfg(feature = "v2_74")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_74")))]
pub use self::constants::FILE_ATTRIBUTE_TIME_ACCESS_NSEC;
pub use self::constants::FILE_ATTRIBUTE_TIME_ACCESS_USEC;
pub use self::constants::FILE_ATTRIBUTE_TIME_CHANGED;
#[cfg(feature = "v2_74")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_74")))]
pub use self::constants::FILE_ATTRIBUTE_TIME_CHANGED_NSEC;
pub use self::constants::FILE_ATTRIBUTE_TIME_CHANGED_USEC;
pub use self::constants::FILE_ATTRIBUTE_TIME_CREATED;
#[cfg(feature = "v2_74")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_74")))]
pub use self::constants::FILE_ATTRIBUTE_TIME_CREATED_NSEC;
pub use self::constants::FILE_ATTRIBUTE_TIME_CREATED_USEC;
pub use self::constants::FILE_ATTRIBUTE_TIME_MODIFIED;
#[cfg(feature = "v2_74")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_74")))]
pub use self::constants::FILE_ATTRIBUTE_TIME_MODIFIED_NSEC;
pub use self::constants::FILE_ATTRIBUTE_TIME_MODIFIED_USEC;
pub use self::constants::FILE_ATTRIBUTE_TRASH_DELETION_DATE;
pub use self::constants::FILE_ATTRIBUTE_TRASH_ITEM_COUNT;
pub use self::constants::FILE_ATTRIBUTE_TRASH_ORIG_PATH;
pub use self::constants::FILE_ATTRIBUTE_UNIX_BLOCKS;
pub use self::constants::FILE_ATTRIBUTE_UNIX_BLOCK_SIZE;
pub use self::constants::FILE_ATTRIBUTE_UNIX_DEVICE;
pub use self::constants::FILE_ATTRIBUTE_UNIX_GID;
pub use self::constants::FILE_ATTRIBUTE_UNIX_INODE;
pub use self::constants::FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT;
pub use self::constants::FILE_ATTRIBUTE_UNIX_MODE;
pub use self::constants::FILE_ATTRIBUTE_UNIX_NLINK;
pub use self::constants::FILE_ATTRIBUTE_UNIX_RDEV;
pub use self::constants::FILE_ATTRIBUTE_UNIX_UID;
#[cfg(feature = "v2_64")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_64")))]
pub use self::constants::MEMORY_MONITOR_EXTENSION_POINT_NAME;
pub use self::constants::MENU_ATTRIBUTE_ACTION;
pub use self::constants::MENU_ATTRIBUTE_ACTION_NAMESPACE;
pub use self::constants::MENU_ATTRIBUTE_ICON;
pub use self::constants::MENU_ATTRIBUTE_LABEL;
pub use self::constants::MENU_ATTRIBUTE_TARGET;
pub use self::constants::MENU_LINK_SECTION;
pub use self::constants::MENU_LINK_SUBMENU;
pub use self::constants::NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME;
pub use self::constants::NETWORK_MONITOR_EXTENSION_POINT_NAME;
#[cfg(feature = "v2_70")]
#[cfg_attr(docsrs, doc(cfg(feature = "v2_70")))]
pub use self::constants::POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME;
pub use self::constants::PROXY_EXTENSION_POINT_NAME;
pub use self::constants::PROXY_RESOLVER_EXTENSION_POINT_NAME;
pub use self::constants::SETTINGS_BACKEND_EXTENSION_POINT_NAME;
pub use self::constants::TLS_BACKEND_EXTENSION_POINT_NAME;
pub use self::constants::TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT;
pub use self::constants::TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER;
pub use self::constants::VFS_EXTENSION_POINT_NAME;
pub use self::constants::VOLUME_IDENTIFIER_KIND_CLASS;
#[allow(deprecated)]
pub use self::constants::VOLUME_IDENTIFIER_KIND_HAL_UDI;
pub use self::constants::VOLUME_IDENTIFIER_KIND_LABEL;
pub use self::constants::VOLUME_IDENTIFIER_KIND_NFS_MOUNT;
pub use self::constants::VOLUME_IDENTIFIER_KIND_UNIX_DEVICE;
pub use self::constants::VOLUME_IDENTIFIER_KIND_UUID;
pub use self::constants::VOLUME_MONITOR_EXTENSION_POINT_NAME;

pub(crate) mod traits {
    pub use super::action::ActionExt;
    pub use super::action_group::ActionGroupExt;
    pub use super::action_map::ActionMapExt;
    pub use super::app_info::AppInfoExt;
    pub use super::app_launch_context::AppLaunchContextExt;
    pub use super::application::ApplicationExt;
    pub use super::application_command_line::ApplicationCommandLineExt;
    pub use super::async_initable::AsyncInitableExt;
    pub use super::async_result::AsyncResultExt;
    pub use super::buffered_input_stream::BufferedInputStreamExt;
    pub use super::buffered_output_stream::BufferedOutputStreamExt;
    pub use super::cancellable::CancellableExt;
    pub use super::converter::ConverterExt;
    pub use super::converter_input_stream::ConverterInputStreamExt;
    pub use super::converter_output_stream::ConverterOutputStreamExt;
    pub use super::data_input_stream::DataInputStreamExt;
    pub use super::data_output_stream::DataOutputStreamExt;
    pub use super::datagram_based::DatagramBasedExt;
    pub use super::dbus_interface::DBusInterfaceExt;
    pub use super::dbus_interface_skeleton::DBusInterfaceSkeletonExt;
    pub use super::dbus_object::DBusObjectExt;
    pub use super::dbus_object_manager::DBusObjectManagerExt;
    pub use super::dbus_object_manager_server::DBusObjectManagerServerExt;
    pub use super::dbus_object_proxy::DBusObjectProxyExt;
    pub use super::dbus_object_skeleton::DBusObjectSkeletonExt;
    pub use super::dbus_proxy::DBusProxyExt;
    #[cfg(feature = "v2_72")]
    #[cfg_attr(docsrs, doc(cfg(feature = "v2_72")))]
    pub use super::debug_controller::DebugControllerExt;
    #[cfg(feature = "v2_72")]
    #[cfg_attr(docsrs, doc(cfg(feature = "v2_72")))]
    pub use super::debug_controller_dbus::DebugControllerDBusExt;
    pub use super::drive::DriveExt;
    pub use super::dtls_client_connection::DtlsClientConnectionExt;
    pub use super::dtls_connection::DtlsConnectionExt;
    pub use super::dtls_server_connection::DtlsServerConnectionExt;
    pub use super::emblemed_icon::EmblemedIconExt;
    pub use super::file::FileExt;
    pub use super::file_enumerator::FileEnumeratorExt;
    pub use super::file_input_stream::FileInputStreamExt;
    pub use super::file_io_stream::FileIOStreamExt;
    pub use super::file_monitor::FileMonitorExt;
    pub use super::file_output_stream::FileOutputStreamExt;
    pub use super::filter_input_stream::FilterInputStreamExt;
    pub use super::filter_output_stream::FilterOutputStreamExt;
    pub use super::icon::IconExt;
    pub use super::inet_address::InetAddressExt;
    pub use super::inet_address_mask::InetAddressMaskExt;
    pub use super::inet_socket_address::InetSocketAddressExt;
    pub use super::initable::InitableExt;
    pub use super::input_stream::InputStreamExt;
    pub use super::io_stream::IOStreamExt;
    pub use super::list_model::ListModelExt;
    pub use super::loadable_icon::LoadableIconExt;
    pub use super::memory_input_stream::MemoryInputStreamExt;
    #[cfg(feature = "v2_64")]
    #[cfg_attr(docsrs, doc(cfg(feature = "v2_64")))]
    pub use super::memory_monitor::MemoryMonitorExt;
    pub use super::memory_output_stream::MemoryOutputStreamExt;
    pub use super::menu_attribute_iter::MenuAttributeIterExt;
    pub use super::menu_link_iter::MenuLinkIterExt;
    pub use super::menu_model::MenuModelExt;
    pub use super::mount::MountExt;
    pub use super::mount_operation::MountOperationExt;
    pub use super::network_address::NetworkAddressExt;
    pub use super::network_monitor::NetworkMonitorExt;
    pub use super::network_service::NetworkServiceExt;
    pub use super::output_stream::OutputStreamExt;
    pub use super::permission::PermissionExt;
    pub use super::pollable_input_stream::PollableInputStreamExt;
    pub use super::pollable_output_stream::PollableOutputStreamExt;
    #[cfg(feature = "v2_70")]
    #[cfg_attr(docsrs, doc(cfg(feature = "v2_70")))]
    pub use super::power_profile_monitor::PowerProfileMonitorExt;
    pub use super::proxy::ProxyExt;
    pub use super::proxy_address::ProxyAddressExt;
    pub use super::proxy_address_enumerator::ProxyAddressEnumeratorExt;
    pub use super::proxy_resolver::ProxyResolverExt;
    pub use super::remote_action_group::RemoteActionGroupExt;
    pub use super::resolver::ResolverExt;
    pub use super::seekable::SeekableExt;
    pub use super::settings::SettingsExt;
    pub use super::settings_backend::SettingsBackendExt;
    pub use super::simple_proxy_resolver::SimpleProxyResolverExt;
    pub use super::socket::SocketExt;
    pub use super::socket_address::SocketAddressExt;
    pub use super::socket_address_enumerator::SocketAddressEnumeratorExt;
    pub use super::socket_client::SocketClientExt;
    pub use super::socket_connectable::SocketConnectableExt;
    pub use super::socket_connection::SocketConnectionExt;
    pub use super::socket_control_message::SocketControlMessageExt;
    pub use super::socket_listener::SocketListenerExt;
    pub use super::socket_service::SocketServiceExt;
    pub use super::tcp_connection::TcpConnectionExt;
    pub use super::tcp_wrapper_connection::TcpWrapperConnectionExt;
    pub use super::threaded_socket_service::ThreadedSocketServiceExt;
    pub use super::tls_backend::TlsBackendExt;
    pub use super::tls_certificate::TlsCertificateExt;
    pub use super::tls_client_connection::TlsClientConnectionExt;
    pub use super::tls_connection::TlsConnectionExt;
    pub use super::tls_database::TlsDatabaseExt;
    pub use super::tls_file_database::TlsFileDatabaseExt;
    pub use super::tls_interaction::TlsInteractionExt;
    pub use super::tls_password::TlsPasswordExt;
    pub use super::tls_server_connection::TlsServerConnectionExt;
    #[cfg(unix)]
    #[cfg_attr(docsrs, doc(cfg(unix)))]
    pub use super::unix_connection::UnixConnectionExt;
    #[cfg(unix)]
    #[cfg_attr(docsrs, doc(cfg(unix)))]
    pub use super::unix_credentials_message::UnixCredentialsMessageExt;
    #[cfg(unix)]
    #[cfg_attr(docsrs, doc(cfg(unix)))]
    pub use super::unix_fd_list::UnixFDListExt;
    #[cfg(unix)]
    #[cfg_attr(docsrs, doc(cfg(unix)))]
    pub use super::unix_fd_message::UnixFDMessageExt;
    #[cfg(unix)]
    #[cfg_attr(docsrs, doc(cfg(unix)))]
    pub use super::unix_input_stream::UnixInputStreamExt;
    #[cfg(unix)]
    #[cfg_attr(docsrs, doc(cfg(unix)))]
    pub use super::unix_output_stream::UnixOutputStreamExt;
    #[cfg(unix)]
    #[cfg_attr(docsrs, doc(cfg(unix)))]
    pub use super::unix_socket_address::UnixSocketAddressExt;
    pub use super::vfs::VfsExt;
    pub use super::volume::VolumeExt;
    pub use super::volume_monitor::VolumeMonitorExt;
}
pub(crate) mod builders {
    pub use super::application::ApplicationBuilder;
    pub use super::buffered_input_stream::BufferedInputStreamBuilder;
    pub use super::buffered_output_stream::BufferedOutputStreamBuilder;
    pub use super::charset_converter::CharsetConverterBuilder;
    pub use super::converter_input_stream::ConverterInputStreamBuilder;
    pub use super::converter_output_stream::ConverterOutputStreamBuilder;
    pub use super::data_input_stream::DataInputStreamBuilder;
    pub use super::data_output_stream::DataOutputStreamBuilder;
    pub use super::list_store::ListStoreBuilder;
}
