searchState.loadedDescShard("glib", 0, "Rust GLib and GObject bindings\nIndicates an abstract type. No instances can be created …\nOnly used in <code>GSignalAccumulator</code> accumulator functions for …\nAction signals are signals that may freely be emitted on …\nAn indefinite type that is a supertype of every type …\nAny array type, i.e. <code>[T]</code>.\nHide the auth_params. Hide the auth_params.\nAdlam. Since: 2.50 Adlam. Since: 2.50\nBreak Opportunity After (BA) Break Opportunity After (BA)\nAhom. Since: 2.48 Ahom. Since: 2.48\nAksara (AK). Since: 2.80 @G_UNICODE_BREAK_AKSARA_PRE_BASE …\nOrdinary Alphabetic and Symbol Characters (AL) Ordinary …\nAmbiguous (Alphabetic or Ideographic) (AI) Ambiguous …\nAnatolian Hieroglyphs. Since: 2.48 Anatolian Hieroglyphs. …\nArabic Arabic\nArmenian Armenian\nThe #GVariant is an array. The #GVariant is an array.\nAvestan. Since 2.26 Avestan. Since 2.26\nAny basic type.\nBidirectional binding; if either the property of the …\n<code>bool</code>.\n<code>u8</code>.\nByte string, i.e. <code>[u8]</code>.\nByte string array, i.e. <code>[[u8]]</code>.\nThe authentication parameters of a URI could not be parsed.\nThe fragment of a URI could not be parsed. The fragment of …\nThe host of a URI could not be parsed. The host of a URI …\nThe password of a URI could not be parsed. The password of …\nThe path of a URI could not be parsed. The path of a URI …\nThe port of a URI could not be parsed. The port of a URI …\nThe query of a URI could not be parsed. The query of a URI …\nThe scheme of a URI could not be parsed. The scheme of a …\nThe user/userinfo of a URI could not be parsed. The …\nBalinese Balinese\nBamum. Since 2.26 Bamum. Since 2.26\nBassa. Since: 2.42 Bassa. Since: 2.42\nBatak. Since 2.28 Batak. Since 2.28\nBreak Opportunity Before (BB) Break Opportunity Before (BB)\nBreak Opportunity Before and After (B2) Break Opportunity …\nBengali Bengali\nBhaiksuki. Since: 2.50 Bhaiksuki. Since: 2.50\n<code>GObject</code> instance (or source) and another property on …\nFlags to be passed to <code>ObjectExt::bind_property()</code> or […\n<code>GBindingGroup</code> can be used to bind multiple properties from …\nBuilder for binding group bindings.\nThe #GVariant is a boolean. The #GVariant is a boolean.\nBopomofo Bopomofo\nDerive macro for defining a <code>BoxedType</code><code>::type_</code> function and …\nThis is a subclass of <code>glib::object::Object</code> capable of …\nBrahmi. Since 2.28 Brahmi. Since 2.28\nBraille Braille\nBuginese Buginese\nBuhid Buhid\nThe #GVariant is a byte. The #GVariant is a byte.\nGLib type: Shared boxed type with reference counted clone …\nA shared immutable byte slice (the equivalent of <code>Rc&lt;[u8]&gt;</code>).\nParameter names are case insensitive. Parameter names are …\nThis is the log domain used by the <code>clone!</code> macro. If you …\nthe parameter will be set upon object construction\nthe parameter can only be set upon object construction\nCanadian Aboriginal Canadian Aboriginal\nCanonical decomposition\nCarian. Since 2.16.3 Carian. Since 2.16.3\nCarriage Return (CR) Carriage Return (CR)\nCaucasian Albanian. Since: 2.42 Caucasian Albanian. Since: …\nChakma. Since: 2.32 Chakma. Since: 2.32\nCham. Since 2.16.3 Cham. Since 2.16.3\nThe result of a single step of the Unicode canonical …\nGLib type: Boxed type with copy-on-clone semantics.\nCherokee Cherokee\nChorasmian. Since: 2.66 Chorasmian. Since: 2.66\nClosing Parenthesis (CP). Since 2.70 Closing Parenthesis …\nClosing Punctuation (CL) Closing Punctuation (CL)\nGeneral category “Punctuation, Close” (Pe) General …\nA <code>CollationKey</code> allows ordering strings using the …\nAttached Characters and Combining Marks (CM) Attached …\na character used by multiple different scripts a character …\nCompatibility decomposition\nComplex Content Dependent (South East Asian) (SA) Complex …\nConditional Japanese Starter (CJ). Since: 2.32 Conditional …\nGeneral category “Punctuation, Connector” (Pc) General …\nContingent Break Opportunity (CB) Contingent Break …\nGeneral category “Other, Control” (Cc) General …\nContinue calling the closure in the future iterations or …\nCoptic Coptic\nLogs will use the crate path as the log domain.\nLogs will use the <code>target</code> of the log crate as a domain; …\nCuneiform Cuneiform\nGeneral category “Symbol, Currency” (Sc) General …\nA wrapper for <code>ConvertError</code> that can hold an offset into …\nCypriot Cypriot\nCypro-Minoan. Since: 2.72 Cypro-Minoan. Since: 2.72\nCyrillic Cyrillic\nThe default binding; if the source property changes, the …\nThe signal is deprecated and will be removed in a future …\nThe type is deprecated and may be removed in a future …\nthe parameter is deprecated and will be removed in a …\nThis signal supports “::detail” appendices to the …\nAny dictionary type, i.e. <code>HashMap&lt;K, V&gt;</code>, <code>BTreeMap&lt;K, V&gt;</code>.\nAny dict entry type, i.e. <code>DictEntry&lt;K, V&gt;</code>.\n<code>f64</code>.\nGeneral category “Punctuation, Dash” (Pd) General …\nGLib type: Inline allocated boxed type with stack copy …\nGLib type: Shared boxed type with reference counted clone …\nthe time is in local daylight time the time is in local …\nGeneral category “Number, Decimal Digit” (Nd) General …\nThe kind of decomposition to perform\nDeseret Deseret\nDevanagari Devanagari\nThe #GVariant is a dictionary entry. The #GVariant is a …\nDives Akuru. Since: 2.66 Dives Akuru. Since: 2.66\nDogra. Since: 2.58 Dogra. Since: 2.58\nThe #GVariant is a double precision floating point value. …\nMacro for deriving implementations of …\nDuployan. Since: 2.42 Duployan. Since: 2.42\nWhen parsing a URI, this indicates that <code>%</code>-encoded …\nSame as <code>ENCODED</code>, for the fragment only. Same as <code>ENCODED</code>, …\nSame as <code>ENCODED</code>, for the path only. Same as <code>ENCODED</code>, for …\nSame as <code>ENCODED</code>, for the query field only. Same as <code>ENCODED</code>…\ncalls to <code>ObjectExt::set_property()</code> for this property will …\nEgyptian Hieroglpyhs. Since 2.26 Egyptian Hieroglpyhs. …\nElbasan. Since: 2.42 Elbasan. Since: 2.42\nElym. Since: 2.62 Elym. Since: 2.62\nEmoji Base (EB). Since: 2.50 Emoji Base (EB). Since: 2.50\nEmoji Modifier (EM). Since: 2.50 Emoji Modifier (EM). …\nGeneral category “Mark, Enclosing” (Me) General …\nDerive macro to register a Rust enum in the GLib type …\nDerive macro for defining a GLib error domain and its …\nEthiopic Ethiopic\nExclamation/Interrogation (EX) Exclamation/Interrogation …\nIndicates a final type. A final type is a non-derivable …\nHide the fragment. Hide the fragment.\nGeneric error if no more specific error is available. See …\nA <code>FilenameCollationKey</code> allows ordering file names using …\nGeneral category “Punctuation, Final quote” (Pf) …\nGeneral category “Other, Format” (Cf) General category …\nThe error returned when a future times out.\nRepresentation of a borrowed <code>GString</code>.\nError type holding all possible failures when creating a …\nError type indicating that a buffer had unexpected …\nA type representing an owned, C-compatible, nul-terminated …\nA mutable text buffer that grows automatically.\nError type holding all possible failures when creating a …\nError type indicating that a buffer had unexpected …\nError type indicating that a buffer did not have a …\n<code>NULL</code>-terminated UTF-8 string as stored in <code>StrV</code>.\nError type indicating that a buffer had invalid UTF-8.\nGeorgian Georgian\nGlagolitic Glagolitic\nAn implementation of a <code>log</code> compatible logger which logs …\nEnumeration of the possible domain handling behaviours for …\nEnumeration of the possible formatting behaviours for a …\nGothic Gothic\nGrantha. Since: 2.42 Grantha. Since: 2.42\nGreek Greek\nGujarati Gujarati\nGunjala Gondi. Since: 2.58 Gunjala Gondi. Since: 2.58\nGurmukhi Gurmukhi\nHandle.\nThe userinfo may contain additional authentication-related …\nThe userinfo field may contain a password, which will be …\nHan Han\nThe #GVariant is a file handle index. The #GVariant is a …\nHangul Hangul\nHangul L Jamo (JL) Hangul L Jamo (JL)\nHangul LV Syllable (H2) Hangul LV Syllable (H2)\nHangul LVT Syllable (H3) Hangul LVT Syllable (H3)\nHangul T Jamo (JT) Hangul T Jamo (JT)\nHangul V Jamo (JV) Hangul V Jamo (JV)\nHanifi Rohingya. Since: 2.58 Hanifi Rohingya. Since: 2.58\nHanunoo Hanunoo\nHatran. Since: 2.48 Hatran. Since: 2.48\nHebrew Hebrew\nHebrew Letter (HL). Since: 2.32 Hebrew Letter (HL). Since: …\nHiragana Hiragana\nHyphen (HY) Hyphen (HY)\nA wrapper for <code>std::io::Error</code> that can hold an offset into …\n<code>i16</code>.\n<code>i32</code>.\n<code>i64</code>.\nIf the two properties being bound are booleans, setting …\nIdeographic (ID) Ideographic (ID)\nImperial Aramaic. Since 2.26 Imperial Aramaic. Since 2.26\nInfix Separator (Numeric) (IS) Infix Separator (Numeric) …\na mark glyph that takes its script from the base glyph to …\nGeneral category “Punctuation, Initial quote” (Pi) …\nInscriptional Pahlavi. Since 2.26 Inscriptional Pahlavi. …\nInscriptional Parthian. Since 2.26 Inscriptional Parthian. …\nInseparable (IN) Inseparable (IN)\nThe #GVariant is a signed 16 bit integer. The #GVariant is …\nThe #GVariant is a signed 32 bit integer. The #GVariant is …\nThe #GVariant is a signed 64 bit integer. The #GVariant is …\nA structure that provides information to the type system …\nA trait to accept both &amp;str or &amp;GStr as an argument.\nA trait to accept both Option&lt;&amp;str&gt; or Option&lt;&amp;GStr&gt; as an …\na value never returned from g_unichar_get_script() a value …\nJavanese. Since 2.26 Javanese. Since 2.26\nTask failure from awaiting a <code>JoinHandle</code>.\nA handle to a task running on a <code>MainContext</code>.\nKaithi. Since 2.26 Kaithi. Since 2.26\nKannada Kannada\nKatakana Katakana\nKawi. Since 2.74 Kawi. Since 2.74\nKayah Li. Since 2.16.3 Kayah Li. Since 2.16.3\nGLib type: Shared boxed type with reference counted clone …\nKharoshthi Kharoshthi\nKhitan small script. Since: 2.66 Khitan small script. …\nKhmer Khmer\nKjohki. Since: 2.42 Kjohki. Since: 2.42\nKhudawadi, Sindhi. Since: 2.42 Khudawadi, Sindhi. Since: …\nupon parameter conversion (see <code>g_param_value_convert()</code>) …\nLao Lao\nLatin Latin\nLepcha. Since 2.16.3 Lepcha. Since 2.16.3\nGeneral category “Number, Letter” (Nl) General …\nLimbu Limbu\nA simple format, writing file, line and message on output.\nLine Feed (LF) Line Feed (LF)\nGeneral category “Separator, Line” (Zl) General …\nLinear A. Since: 2.42 Linear A. Since: 2.42\nLinear B Linear B\nLisu. Since 2.26 Lisu. Since 2.26\nStructure representing a single field in a structured log …\nGeneral category “Letter, Lowercase” (Ll) General …\nLycian. Since 2.16.3 Lycian. Since 2.16.3\nLydian. Since 2.16.3 Lydian. Since 2.16.3\nAny maybe type, i.e. <code>Option&lt;T&gt;</code>.\nVarargs signal emission will always collect the arguments, …\nMahajani. Since: 2.42 Mahajani. Since: 2.42\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nMakasar. Since: 2.58 Makasar. Since: 2.58\nMalayalam Malayalam\nMandaic. Since 2.28 Mandaic. Since 2.28\nMandatory Break (BK) Mandatory Break (BK)\nManichaean. Since: 2.42 Manichaean. Since: 2.42\nMarchen. Since: 2.50 Marchen. Since: 2.50\nGLib type: Shared boxed type with reference counted clone …\nMasaram Gondi. Since: 2.54 Masaram Gondi. Since: 2.54\nMathematical notation. Since: 2.72 Mathematical notation. …\nGeneral category “Symbol, Math” (Sm) General category …\nThe #GVariant is a maybe-typed value. The #GVariant is a …\nMedefaidrin. Since: 2.58 Medefaidrin. Since: 2.58\nMeetei Mayek. Since 2.26 Meetei Mayek. Since 2.26\nMende Kikakui. Since: 2.42 Mende Kikakui. Since: 2.42\nMeroitic Cursive. Since: 2.32 Meroitic Cursive. Since: 2.32\nMeroitic Hieroglyphs. Since: 2.32 Meroitic Hieroglyphs. …\nMiao. Since: 2.32 Miao. Since: 2.32\nModi. Since: 2.42 Modi. Since: 2.42\nGeneral category “Letter, Modifier” (Lm) General …\nGeneral category “Symbol, Modifier” (Sk) General …\nMongolian Mongolian\nMro. Since: 2.42 Mro. Since: 2.42\nMultani. Since: 2.48 Multani. Since: 2.48\nMyanmar Myanmar\nNo flags set. No flags set.\nNo flags set. No flags set.\nNo flags set. No flags set.\nNo special flags. Since: 2.74\nThe host component should not be assumed to be a DNS …\nNo emissions hooks are supported for this signal.\nSignals being emitted for an object while currently being …\nNabataean. Since: 2.42 Nabataean. Since: 2.42\nNag Mundari. Since 2.74 Nag Mundari. Since 2.74\nNand. Since: 2.62 Nand. Since: 2.62\nNew Tai Lue New Tai Lue\nNewa. Since: 2.50 Newa. Since: 2.50\nNext Line (NL) Next Line (NL)\nN’Ko N’Ko\nThe character could not be decomposed further\nNon-breaking (“Glue”) (GL) Non-breaking (“Glue”) …\nGeneral category “Mark, Nonspacing” (Mn) General …\nNonstarter (NS) Nonstarter (NS)\nLogs will have no domain specified.\nNumeric (NU) Numeric (NU)\nNushu. Since: 2.54 Nushu. Since: 2.54\nRohg. Since: 2.62 Rohg. Since: 2.62\nDBus object path.\nObject path array, i.e. <code>[&amp;str]</code>.\nThe #GVariant is a D-Bus object path string. The #GVariant …\nOgham Ogham\nOl Chiki. Since 2.16.3 Ol Chiki. Since 2.16.3\nOld Hungarian. Since: 2.48 Old Hungarian. Since: 2.48\nOld Italic Old Italic\nOld North Arabian. Since: 2.42 Old North Arabian. Since: …\nOld Permic. Since: 2.42 Old Permic. Since: 2.42\nOld Persian Old Persian\nOld Sogdian. Since: 2.58 Old Sogdian. Since: 2.58\nOld South Arabian. Since 2.26 Old South Arabian. Since 2.26\nOld Turkic. Since 2.28 Old Turkic. Since 2.28\nOld Uyghur. Since: 2.72 Old Uyghur. Since: 2.72\nOpening Punctuation (OP) Opening Punctuation (OP)\nGeneral category “Punctuation, Open” (Ps) General …\nOriya Oriya\nOsage. Since: 2.50 Osage. Since: 2.50\nOsmanya Osmanya\nGeneral category “Letter, Other” (Lo) General category …\nGeneral category “Number, Other” (No) General category …\nGeneral category “Punctuation, Other” (Po) General …\nGeneral category “Symbol, Other” (So) General category …\nParse the URI more relaxedly than the RFC 3986 grammar …\nSee <code>UriFlags::PARSE_RELAXED</code>. See <code>UriFlags::PARSE_RELAXED</code>.\nHide the password. Hide the password.\nPahawh Hmong. Since: 2.42 Pahawh Hmong. Since: 2.42\nThe first character may decompose further, but the second …\nPalmyrene. Since: 2.42 Palmyrene. Since: 2.42\nGeneral category “Separator, Paragraph” (Zp) General …\nThrough the <code>ParamFlags</code> flag values, certain aspects of …\n<code>GParamSpec</code> encapsulates the metadata required to specify …\nGLib type: Shared boxed type with reference counted clone …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nA trait implemented by the various <code>ParamSpec</code> builder types.\nGLib type: Shared boxed type with reference counted clone …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nA <code>ParamSpec</code> derived structure that redirects operations to …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nGLib type: Shared boxed type with reference counted clone …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nA <code>ParamSpec</code> derived structure that contains the meta data …\nPau Cin Hau. Since: 2.42 Pau Cin Hau. Since: 2.42\nPhags-pa Phags-pa\nPhoenician Phoenician\nA simple format, writing only the message on output.\nPostfix (Numeric) (PO) Postfix (Numeric) (PO)\nPrefix (Numeric) (PR) Prefix (Numeric) (PR)\nGeneral category “Other, Private Use” (Co) General …\nThis macro enables you to derive object properties in a …\nPsalter Pahlavi. Since: 2.42 Psalter Pahlavi. Since: 2.42\nHide the query. Hide the query.\nAmbiguous Quotation (QU) Ambiguous Quotation (QU)\nthe parameter is readable\nalias for <code>READABLE</code> | <code>WRITABLE</code>\nInvoke the object method handler in the last emission …\nInvoke the object method handler in the first emission …\nInvoke the object method handler in the third emission …\nGLib type: Shared boxed type with reference counted clone …\nRegional Indicator (RI). Since: 2.36 Regional Indicator …\nRejang. Since 2.16.3 Rejang. Since 2.16.3\nRunic Runic\nA scheme-based normalization will be applied. For example, …\nType signature.\n<code>&amp;str</code>.\nString array, i.e. <code>[&amp;str]</code>.\nSynchronize the values of the source and target properties …\nSamaritan. Since 2.26 Samaritan. Since 2.26\nSaurashtra. Since 2.16.3 Saurashtra. Since 2.16.3\nPreferred value to be used as setter for the associated …\nSharada. Since: 2.32 Sharada. Since: 2.32\nDerive macro for defining a <code>SharedType</code><code>::get_type</code> function …\nShavian Shavian\nSiddham. Since: 2.42 Siddham. Since: 2.42\nThe signal flags are used to specify a signal’s …\n<code>GSignalGroup</code> manages a collection of signals on a <code>GObject</code>.\nThe #GVariant is a D-Bus signature string. The #GVariant …\nSignwriting. Since: 2.48 Signwriting. Since: 2.48\nSinhala Sinhala\nSogdian. Since: 2.58 Sogdian. Since: 2.58\nSora Sompeng. Since: 2.32 Sora Sompeng. Since: 2.32\nGLib type: Shared boxed type with reference counted clone …\nRepresents a <code>Future</code> around a <code>glib::Source</code>. The future will …\nRepresents a <code>Stream</code> around a <code>glib::Source</code>. The stream will …\nSoyombo. Since: 2.54 Soyombo. Since: 2.54\nSpace (SP) Space (SP)\nGeneral category “Separator, Space” (Zs) General …\nGeneral category “Mark, Spacing” (Mc) General category …\nVariant of <code>JoinHandle</code> that is returned from …\nthe time is in local standard time the time is in local …\nThe #GVariant is a normal string. The #GVariant is a …\nA logger using glib structured logging.\nSundanese. Since 2.16.3 Sundanese. Since 2.16.3\nSurrogates (SG) Surrogates (SG)\nGeneral category “Other, Surrogate” (Cs) General …\nSyloti Nagri Syloti Nagri\nSymbols Allowing Break After (SY) Symbols Allowing Break …\nSyriac Syriac\nAny tuple type, i.e. <code>(T)</code>, <code>(T, T)</code>, etc.\nTagalog Tagalog\nTagbanwa Tagbanwa\nTai Le Tai Le\nTai Tham. Since 2.26 Tai Tham. Since 2.26\nTai Viet. Since 2.26 Tai Viet. Since 2.26\nTakri. Since: 2.32 Takri. Since: 2.32\nTamil Tamil\nTangsa. Since: 2.72 Tangsa. Since: 2.72\nTangut. Since: 2.50 Tangut. Since: 2.50\nTelugu Telugu\nThaana Thaana\nThai Thai\nA handle to a thread running on a <code>ThreadPool</code>.\nTibetan Tibetan\nTifinagh Tifinagh\nA value representing an interval of time, in microseconds.\nDisambiguates a given time in two ways.\nA <code>GTimeZone</code> represents a time zone, at no particular point …\nTirhuta. Since: 2.42 Tirhuta. Since: 2.42\nGeneral category “Letter, Titlecase” (Lt) General …\nToto. Since: 2.72 Toto. Since: 2.72\nThe #GVariant is a tuple. The #GVariant is a tuple.\nBit masks used to check or determine characteristics of a …\nThis structure is used to provide the type system with the …\n<code>GTypeModule</code> provides a simple implementation of the …\nAn interface that handles the lifecycle of dynamically …\nThe <code>TypeValueTable</code> provides the functions required by the …\n<code>u16</code>.\n<code>u32</code>.\n<code>u64</code>.\nUnit, i.e. <code>()</code>.\nHide the userinfo. Hide the userinfo.\nUgaritic Ugaritic\nThe #GVariant is an unsigned 16 bit integer. The #GVariant …\nThe #GVariant is an unsigned 32 bit integer. The #GVariant …\nThe #GVariant is an unsigned 64 bit integer. The #GVariant …\nGeneral category “Other, Not Assigned” (Cn) General …\nThis trait provides access to Unicode character …\nThese are the possible line break classifications.\nThe #GUnicodeScript enumeration identifies different …\nThese are the possible character classifications from the …\nthe time is in UTC the time is in UTC\nUnknown (XX) Unknown (XX)\nan unassigned code point an unassigned code point\nGeneral category “Letter, Uppercase” (Lu) General …\nThe <code>GUri</code> type and related functions can be used to parse …\nError codes returned by #GUri methods. Error codes …\nFlags that describe a URI.\nFlags describing what parts of the URI to hide in …\nFlags modifying the way parameters are handled by …\nIndicates an abstract value type, i.e. a type that …\nVariant dictionary, i.e. <code>HashMap&lt;String, Variant&gt;</code>, …\nVariant.\nVai. Since 2.16.3 Vai. Since 2.16.3\nGLib type: Boxed type with copy-on-clone semantics.\nExample\nThe #GVariant is a variant. The #GVariant is a variant.\nDerive macro for serializing/deserializing custom …\nThe range of possible top-level types of #GVariant …\n<code>VariantDict</code> is a mutable key/value store where the keys …\nIterator over items in a variant.\nIterator over items in a variant of type <code>as</code>.\nDescribes <code>Variant</code> types.\nAn iterator over the individual components of a tuple …\nDescribes <code>Variant</code> types.\nVithkuqi. Since: 2.72 Vithkuqi. Since: 2.72\nthe parameter is writable\nReplace <code>+</code> with space character. Only useful for URLs on …\nWcho. Since: 2.62 Wcho. Since: 2.62\nWarang Citi. Since: 2.42 Warang Citi. Since: 2.42\nWord Joiner (WJ) Word Joiner (WJ)\nYezidi. Since: 2.66 Yezidi. Since: 2.66\nYi Yi\nZanabazar Square. Since: 2.54 Zanabazar Square. Since: 2.54\nZero Width Joiner (ZWJ). Since: 2.50 Zero Width Joiner …\nZero Width Space (ZW) Zero Width Space (ZW)\nDetermines the time zone abbreviation to be used during a …\nAborts the task associated with the handle.\nAcquire ownership of the main context.\nFinds an interval within @self that corresponds to the …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nConverts this GLib string to a byte slice.\nConverts this GLib string to a byte slice containing the …\nReturn the full number of days in this <code>TimeSpan</code>.\nExtracts the <code>GStr</code> containing the entire string.\nReturns &amp;GStr slice.\nReturn the full number of hours in this <code>TimeSpan</code>.\nReturn the full number of microseconds in this <code>TimeSpan</code>.\nReturn the full number of milliseconds in this <code>TimeSpan</code>.\nReturn the full number of minutes in this <code>TimeSpan</code>.\nReturns the inner pointer to this GLib string.\nReturns the string’s C pointer.\nReturn the underlying pointer of the <code>GString</code>.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturns the internal source ID.\nReturn the full number of seconds in this <code>TimeSpan</code>.\nConverts this GLib string to a string slice.\nReturns the corresponding <code>&amp;str</code>.\nReturn the <code>GString</code> as string slice.\nReturns <code>&amp;[str]</code> slice.\nConverts to a string slice.\nGets @self’s authentication parameters, which may contain\nSet the binding flags to <code>BIDIRECTIONAL</code>.\nCreates a binding between <code>source_property</code> on the source …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBlocks all signal handlers managed by <code>self</code> so they will not\nRuns a new, infallible <code>Future</code> on the main context and …\nGet the short description of a <code>ParamSpec</code>.\nGeneric error used for functions that fail without any …\nImmutably borrows the wrapped value.\nMutably borrows the wrapped value.\n<code>IMPL</code> Boxed wrapper implementation.\n<code>IMPL</code> BoxedInline wrapper implementation.\nSimilar to <code>try_build</code> but panics instead of failing.\nCreates a new #GUri from the given components according to …\nCreates a new #GUri from the given components according to …\nObtain the character set for the current locale.\nCreate a <code>Future</code> that will resolve once the child process …\nCreate a <code>Future</code> that will resolve once the child process …\nMakes a clone of this shared reference.\nCopies the boxed type with the type-specific copy function.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nCopies the inline boxed type by value with the …\nCopies the inline boxed type by value with the …\nMakes a clone of this shared reference.\nCopies the boxed type with the type-specific copy function.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMacro for passing variables as strong or weak references …\nMacro for creating a <code>Closure</code> object. This is a wrapper …\nThe same as <code>closure!</code> but uses <code>Closure::new_local</code> as a …\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nConnects <code>c_handler</code> to the signal <code>detailed_signal</code> on the …\nThis signal is emitted when <code>target</code> is set to a new value …\nLike <code>Self::connect_bind</code> but doesn’t require a <code>Send+Sync</code> …\nConnects <code>closure</code> to the signal <code>detailed_signal</code> on <code>target</code>.\nLike <code>Self::connect</code> but doesn’t require a <code>Send+Sync</code> …\nThis signal is emitted when the target instance of <code>self_</code> …\nLike <code>Self::connect_unbind</code> but doesn’t require a <code>Send+Sync</code>…\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nCheck if this <code>VariantDict</code> contains the given key.\nWhether all set bits in a source flags value are also set …\nImplementation detail.\nA macro which behaves exactly as <code>log::debug!</code> except that …\nCreates a new InterfaceInfo with default value.\nCreates a new TypeInfo with default value.\nCreates a new TypeValueTable with default value.\nCreates a new empty string.\nDefault: 0`\nDefault: None`\nDefault: None`\nGets the default value of <code>self</code> as a pointer to a <code>Value</code>.\nDefault: <code>&lt; i8 as Default &gt; :: default()</code>\nDefault: <code>&lt; u8 as Default &gt; :: default()</code>\nDefault: <code>false</code>\nDefault: <code>&lt; i32 as Default &gt; :: default()</code>\nDefault: <code>&lt; u32 as Default &gt; :: default()</code>\nDefault: <code>&lt; libc::c_long as Default &gt; :: default()</code>\nDefault: <code>&lt; libc::c_ulong as Default &gt; :: default()</code>\nDefault: <code>&lt; i64 as Default &gt; :: default()</code>\nDefault: <code>&lt; u64 as Default &gt; :: default()</code>\nDefault: <code>&lt; f32 as Default &gt; :: default()</code>\nDefault: <code>&lt; f64 as Default &gt; :: default()</code>\nWhen applied to <code>ObjectImpl</code>\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturn the element type of this variant type.\nDefault: None`\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nConvert this dictionary to a <code>Variant</code>\nConvert this dictionary to a <code>Variant</code>\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\n<code>Error</code> binding and helper trait.\nA macro which behaves exactly as <code>log::error!</code> except that …\nEscapes arbitrary data for use in a URI.\nEscapes a string for use in a URI.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFinds an interval within @self that corresponds to the …\nReturn the first type of this variant type.\nBind the properties with the given flags.\nGets @self’s flags set upon construction.\nRetrieves the flags passed when constructing the <code>Binding</code>.\nAttribute macro for defining flags using the <code>bitflags</code> …\nCreate a <code>ParamSpecOverride</code> to override a class property.\nCreate a <code>ParamSpecOverride</code> to override an interface …\nFormats an <code>Arguments</code> into a <code>GString</code>.\nGets @self’s fragment, which may contain <code>%</code>-encoding, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a string into a <code>CollationKey</code> that can be compared …\nReturns the argument unchanged.\nConverts a string into a <code>FilenameCollationKey</code> that can be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nCreate a new timespan from days.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nCreate a new timespan from hours.\nCreates a #GTimeZone corresponding to @identifier. If …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nCreate a new timespan from microseconds.\nCreate a new timespan from milliseconds.\nCreate a new timespan from minutes.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nCreates a #GTimeZone corresponding to the given constant …\nTakes ownership of <code>data</code> and creates a new <code>Bytes</code> without …\nWraps a raw C string with a safe GLib string wrapper. The …\nWraps a raw C string with a safe GLib string wrapper. The …\nWraps a raw C string with a safe GLib string wrapper. The …\nWraps a raw C string with a safe GLib string wrapper. The …\nWraps a raw C string with a safe GLib string wrapper. The …\nCreate a new timespan from seconds.\nCreates a view into static <code>data</code> without copying.\nConverts a type string into <code>&amp;VariantTy</code> without any checks.\nCreates a GLib string wrapper from a string slice, …\nCreates a GLib string wrapper from a string slice.\nCreates a GLib string wrapper from a string slice, …\nUnsafely creates a GLib string wrapper from a string …\nTries to create a <code>VariantType</code> from an owned string.\nCreates a GLib string by consuming a string, checking for …\nCreates a GLib string by consuming a string, without …\nCreates a GLib string by consuming a byte vector.\nCreates a GLib string by consuming a byte vector, checking …\nUnsafely creates a GLib string by consuming a byte vector, …\nCreates a GLib string wrapper from a byte slice, …\nCreates a GLib string by consuming a nul-terminated byte …\nCreates a GLib string wrapper from a byte slice.\nCreates a GLib string by consuming a nul-terminated byte …\nCreates a GLib string wrapper from a byte slice, checking …\nCreates a GLib string by consuming a nul-terminated byte …\nUnsafely creates a GLib string wrapper from a byte slice.\nCreates a GLib string by consuming a byte vector, without …\nThis macro returns the name of the enclosing function. As …\nAdd a timeout to a <code>Future</code>.\nAdd a timeout to a <code>Future</code>.\nMacro used to log using GLib logging system. It uses g_log.\nMacro used to log using GLib logging system. It uses g_log.\nMacro used to log using GLib logging system. It uses g_log.\nMacro used to log using GLib logging system. It uses g_log.\nMacro used to log using GLib logging system. It uses g_log.\nMacro used to log using GLib logging system. It uses g_log.\nMacro used to print messages. It uses g_print.\nMacro used to print error messages. It uses g_printerr.\nMacro used to log using GLib logging system. It uses g_log.\nCreates a <code>GString</code> using interpolation of runtime …\nCreates a <code>GString</code> using interpolation of runtime …\nWrapper implementations for BoxedInline types. See <code>wrapper!</code>…\nWrapper implementations for Boxed types. See <code>wrapper!</code>.\nObjectType implementations for Object types. See <code>wrapper!</code>.\nWrapper implementations for shared types. See <code>wrapper!</code>.\nConverts a static string literal into a static …\nConverts a static string literal into a static …\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nGets @self’s host. This will never have <code>%</code>-encoded …\nGet the identifier of this #GTimeZone, as passed to …\nA macro which behaves exactly as <code>log::info!</code> except that it …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert a value into the dictionary\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert a variant into the dictionary.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCreate a <code>Stream</code> that will provide a value every given …\nCreate a <code>Stream</code> that will provide a value every given …\nCreate a <code>Stream</code> that will provide a value every given …\nCreate a <code>Stream</code> that will provide a value every given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>GString</code> and returns the underlying byte …\nConsumes the <code>GString</code> and returns the underlying byte …\nTransform into a nul-terminated raw C string pointer.\nReturns the original value that was attempted to convert …\nReturns the original value that was attempted to convert …\nReturns the original value that was attempted to convert …\nWaits until the task is spawned and returns the <code>JoinHandle</code>.\nConverts the error into a panic result.\nSafely converts the handle into a <code>SourceId</code>.\nFinalizes the builder, converting it to a <code>GString</code>.\nSet the binding flags to <code>INVERT_BOOLEAN</code>.\nInvokes <code>func</code> on the main context.\nInvokes <code>func</code> on the main context.\nInvokes <code>func</code> on the main context with the given priority.\nInvokes <code>func</code> on the main context with the given priority.\nDefault: <code>crate::Type::UNIT</code>\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nCheck if this variant type is an array type.\nCheck if this variant type is a basic type.\nReturns <code>true</code> if this is a <code>Break</code> variant.\nReturns <code>true</code> if the handle was cancelled.\nCheck if this variant type is a container type.\nReturns <code>true</code> if this is a <code>Continue</code> variant.\nCheck if this variant type is a definite type.\nCheck if this variant type is a dict entry type.\nDetermines if daylight savings time is in effect during a …\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nCheck if this variant type is a maybe type.\nReturns <code>true</code> if the task terminated with a panic.\nCheck if this variant type is a subtype of another.\nCheck if this variant type is a tuple type.\nParses @uri_string according to @flags, to determine …\nValidate a property name for a <code>ParamSpec</code>. This can be …\nCheck if this variant type is a variant.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nJoins the given components together according to @flags to …\nWaits for the associated thread to finish.\nJoins the given components together according to @flags to …\nReturn the key type of this variant type.\nRetrieves the field key.\nSplits an URI list conforming to the text/uri-list mime …\nCreates a #GTimeZone corresponding to local time.  The …\nTo set back the default print handler, use the …\nMacro used to log using GLib structured logging system.\nTo set the default print handler, use the …\nSets whether GLib log functions output to stderr or stdout.\nLook up a typed value from this <code>VariantDict</code>.\nLook up and return a value from this <code>VariantDict</code>.\nDefault: <code>&lt; i8 &gt; :: MAX</code>\nDefault: <code>&lt; u8 &gt; :: MAX</code>\nDefault: <code>&lt; i32 &gt; :: MAX</code>\nDefault: <code>&lt; u32 &gt; :: MAX</code>\nDefault: <code>&lt; libc::c_long &gt; :: MAX</code>\nDefault: <code>&lt; libc::c_ulong &gt; :: MAX</code>\nDefault: <code>&lt; i64 &gt; :: MAX</code>\nDefault: <code>&lt; u64 &gt; :: MAX</code>\nDefault: <code>&lt; f32 &gt; :: MAX</code>\nDefault: <code>&lt; f64 &gt; :: MAX</code>\nDefault: <code>&lt; i8 &gt; :: MIN</code>\nDefault: <code>&lt; u8 &gt; :: MIN</code>\nDefault: <code>&lt; i32 &gt; :: MIN</code>\nDefault: <code>&lt; u32 &gt; :: MIN</code>\nDefault: <code>&lt; libc::c_long &gt; :: MIN</code>\nDefault: <code>&lt; libc::c_ulong &gt; :: MIN</code>\nDefault: <code>&lt; i64 &gt; :: MIN</code>\nDefault: <code>&lt; u64 &gt; :: MIN</code>\nDefault: <code>&lt; f32 &gt; :: MIN</code>\nDefault: <code>&lt; f64 &gt; :: MIN</code>\nReturn the number of items in this variant type.\nGet the name of a <code>ParamSpec</code>.\nGets the GQuark for the name.\nCreates a new empty <code>GString</code>.\nTries to create a <code>VariantType</code> from a string slice.\nCreate a new <code>SourceFuture</code>\nCreate a new <code>SourceStream</code>\nCreates a new <code>BoxedAnyObject</code> containing <code>value</code>\nA version of g_time_zone_new_identifier() which returns …\nCreates a new <code>BindingGroup</code>.\nCreate a new <code>VariantDict</code> optionally populating it with the …\nTries to create a <code>&amp;VariantTy</code> from a string slice.\nCreates a new iterator over the types of the specified …\nCreates a field from a borrowed key and value.\nCreates a new instance of <code>GlibLogger</code>. See documentation of …\nCreates a <code>VariantType</code> from an array element type. …\nCreates a <code>VariantType</code> from a key and value type. …\nCreates a <code>VariantType</code> from a maybe element type. …\nCreates a <code>VariantType</code> from a maybe element type. …\nCreates a field with an empty value and <code>data</code> as a user …\nReturn the next type of this variant type.\nReturns the nickname of this <code>ParamSpec</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nFetch a <code>GStrInteriorNulError</code> to get more details about the …\nReturns the position of the nul-byte in the slice that …\n<code>IMPL</code> Object wrapper implementation and <code>Object</code> binding.\nMacro for boilerplate of <code>ObjectInterface</code> implementations.\nMacro for boilerplate of <code>ObjectSubclass</code> implementations.\nDetermines the offset to UTC in effect during a particular …\nParses @uri_string according to @flags. If the result is …\nParses @uri_ref according to @flags and, if it is a …\nGets the scheme portion of a URI string. RFC 3986 decodes …\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nGets @self’s password, which may contain <code>%</code>-encoding, …\nGets @self’s path, which may contain <code>%</code>-encoding, …\nGets the scheme portion of a URI string. RFC 3986 decodes …\nGets @self’s port.\nTraits and essential types intended for blanket imports.\nSame as <code>get_prgname()</code>.\nGets @self’s query, which may contain <code>%</code>-encoding, …\nIf the paramspec redirects operations to another paramspec,\nThis module is inefficient and should not be used by Rust …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRemove the given <code>key</code> from the dictionary.\nThe intersection of a source flags value with the …\nReplaces the wrapped value with a new one, returning the …\nParses @uri_ref according to @flags and, if it is a …\nProvides a glib log handler which routes all logging …\nGets @self’s scheme. Note that this will always be …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nImplementation detail.\nImplementation detail.\nThis function will set the maximum @interval that a thread …\nSets the maximal number of unused threads to @max_threads. …\nImplementation detail.\nTo set back the default print handler, use the …\nTo set back the default print handler, use the …\nSame as <code>set_prgname()</code>.\nSets <code>source</code> as the source object used for creating property\nSets the target instance used when connecting signals. Any …\n<code>IMPL</code> Shared (reference counted) wrapper implementation.\n<code>IMPL</code> Low level signal support.\nGets the source object used for binding properties.\nReturns the <code>Source</code> associated with this handle.\nRetrieves the name of the property of <code>source</code> used as the …\nSpawn a new infallible <code>Future</code> on the main context.\nSpawn a new infallible <code>Future</code> on the main context from …\nSpawn a new infallible <code>Future</code> on the main context from …\nSpawn a new infallible <code>Future</code> on the thread-default main …\nSpawn a new infallible <code>Future</code> on the thread-default main …\nSpawn a new infallible <code>Future</code> on the main context.\nSpawn a new infallible <code>Future</code> on the main context, with a …\nSpawn a new infallible <code>Future</code> on the main context, with a …\nParses @uri_ref (which can be an absolute or relative URI) …\nParses @uri_string (which must be an absolute URI) …\nParses @uri_ref (which can be an absolute or relative URI) …\nStops all currently unused threads. This does not change …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nModule containing infrastructure for subclassing <code>GObject</code>s …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSet the binding flags to <code>SYNC_CREATE</code>.\nGets the target instance used when connecting signals.\nRetrieves the name of the property of <code>target</code> used as the …\nThe <code>GType</code> of the target property.\nCreate a <code>Future</code> that will resolve after the given number …\nCreate a <code>Future</code> that will resolve after the given number …\nCreate a <code>Future</code> that will resolve after the given number …\nCreate a <code>Future</code> that will resolve after the given number …\nConverts this GLib string to a C string slice, checking …\nConverts this GLib string to a C string slice, without …\nConverts this GLib string to a C string slice, truncating …\nReturns the corresponding <code>&amp;GStr</code>.\nThis is just an alias for <code>as_str</code>.\nReturns a string representing @self.\nReturns a string representing @self, subject to the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nA macro which behaves exactly as <code>log::trace!</code> except that …\nTransform changed property values from the target object …\nTransform changed property values from the source object …\nTranslation between GLib/GLib-based FFI types and their …\nImmutably borrows the wrapped value, returning an error if …\nMutably borrows the wrapped value, returning an error if …\nEstablish the property binding.\nAttempts to convert the error into a panic result.\nIterate over the types of this variant type.\nRuntime type information.\nExplicitly releases the binding between the source and the …\nUnblocks all signal handlers managed by <code>self</code> so they will …\nUnescapes a segment of an escaped string as binary data.\nUnescapes a segment of an escaped string.\nUnescapes a whole escaped string.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nCreate a <code>Future</code> that will resolve once the given UNIX …\nCreate a <code>Future</code> that will resolve once the given UNIX …\nCreate a <code>Stream</code> that will provide a value whenever the …\nCreate a <code>Stream</code> that will provide a value whenever the …\nTo set the default print handler, use the <code>set_print_handler</code>…\nTo set the default print handler, use the …\nGets the ‘username’ component of @self’s userinfo, …\nRetrieves the the user data value from a field created …\nGets @self’s userinfo, which may contain <code>%</code>-encoding, …\nCreates a #GTimeZone corresponding to UTC.\nFetch a <code>Utf8Error</code> to get more details about the conversion …\n<code>Value</code> binding and helper traits.\nReturn the value type of this variant type.\nRetrieves a byte array of the field value. Returns <code>None</code> if …\nRetrieves a string of the field value, or <code>None</code> if the …\n<code>Variant</code> binding and helper traits.\nA macro which behaves exactly as <code>log::warn!</code> except that it …\nCall closure with the main context configured as the …\nCreates a new <code>SignalGroup</code> for target instances of …\n<code>IMPL</code> The <code>wrapper!</code> macro and miscellaneous wrapper traits.\nDefines a wrapper type and implements the appropriate …\nEncapsulates memory management logic for boxed types.\nMemory management functions for a boxed type.\nMakes a copy.\nFrees the object.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWrapper for values where C functions expect a plain C <code>char</code>\nWrapper for values where C functions expect a plain C …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrait for generalizing downgrading a strong reference to a …\nStrong reference type.\nTrait for generalizing upgrading a weak reference to a …\nWeak reference type.\nDowngrade to a weak reference.\nTry upgrading a weak reference to a strong reference.\nGLib type: Shared boxed type with reference counted clone …\nReturn the inner pointer to the underlying C value.\nMakes a clone of this shared reference.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows the underlying C value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvalidates the closure.\nInvalidates the closure.\nInvokes the closure with the given arguments.\nInvokes the closure with the given arguments.\nInvokes the closure with the given arguments.\nCreates a new closure around a Rust closure.\nCreates a new closure around a Rust closure.\nCreates a new closure around a Rust closure.\nCreates a new closure around a Rust closure.\nCreates a new closure around a Rust closure.\nA destructive iterator over a <code>List</code>.\nA non-destructive iterator over a <code>List</code>.\nA non-destructive iterator over a <code>List</code>.\nA list of items of type <code>T</code>.\nReturns the underlying pointer.\nReturns the underlying pointer.\nReturns a reference to the last item of the list, if any.\nReturns a mutable reference to the last item of the list, …\nRemoves all items from the list.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>List</code> around a list.\nCreate a new <code>List</code> around a list.\nCreate a new <code>List</code> around a list.\nReturns a reference to the first item of the list, if any.\nReturns a mutable reference to the first item of the list, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the list and returns the underlying pointer.\nCheck if the list is empty.\nCreate a non-destructive iterator over the <code>List</code>.\nCreate a non-destructive mutable iterator over the <code>List</code>.\nReturns the length of the list.\nCreates a new empty list.\nRemoves the back item from the list, if any.\nRemoves the front item from the list, if any.\nAppends the new item to the back of the list.\nPrepends the new item to the front of the list.\nOnly keeps the item in the list for which <code>f</code> returns <code>true</code>.\nReverse the list.\nSorts the list.\nSorts the list.\nA trait to accept both <code>&amp;[T]</code> or <code>PtrSlice&lt;T&gt;</code> as an argument.\nSlice of elements of type <code>T</code> allocated by the GLib …\nReturns the underlying pointer.\nBorrows this slice as a <code>&amp;mut [T]</code>.\nReturns the remaining items as mutable slice.\nReturns the underlying pointer.\nBorrows this slice as a <code>&amp;[T]</code>.\nReturns the remaining items as slice.\nReturns the capacity of the slice.\nRemoves all items from the slice.\nClones and appends all elements in <code>slice</code> to the slice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows a C array.\nBorrows a C array.\nCreate a new <code>PtrSlice</code> around a <code>NULL</code>-terminated C array.\nCreate a new <code>PtrSlice</code> around a C array.\nCreate a new <code>PtrSlice</code> around a <code>NULL</code>-terminated C array.\nCreate a new <code>PtrSlice</code> around a C array.\nCreate a new <code>PtrSlice</code> around a <code>NULL</code>-terminated C array.\nCreate a new <code>PtrSlice</code> around a C array.\nInserts <code>item</code> at position <code>index</code> of the slice, shifting all …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the slice and returns the underlying pointer.\nReturns <code>true</code> if the slice is empty.\nGets the length of the slice.\nCreates a new empty slice.\nRemoves the last item of the slice and returns it.\nPushes <code>item</code> to the end of the slice.\nRemoves item from position <code>index</code> of the slice, shifting …\nReserves at least this much additional capacity.\nRuns the given closure with a <code>NULL</code>-terminated array.\nSets the length of the slice to <code>len</code>.\nShortens the slice by keeping the last <code>len</code> items.\nCreates a new empty slice with the given capacity.\nSlice of elements of type <code>T</code> allocated by the GLib …\nReturns the underlying pointer.\nBorrows this slice as a <code>&amp;mut [T]</code>.\nReturns the remaining items as mutable slice.\nReturns the underlying pointer.\nBorrows this slice as a <code>&amp;[T]</code>.\nReturns the remaining items as slice.\nReturns the capacity of the slice.\nRemoves all items from the slice.\nClones and appends all elements in <code>slice</code> to the slice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows a C array.\nBorrows a mutable C array.\nCreate a new <code>Slice</code> around a C array.\nCreate a new <code>Slice</code> around a C array.\nCreate a new <code>Slice</code> around a C array.\nBorrows a C array of references.\nBorrows a mutable C array.\nInserts <code>item</code> at position <code>index</code> of the slice, shifting all …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the slice and returns the underlying pointer.\nReturns <code>true</code> if the slice is empty.\nGets the length of the slice.\nCreates a new empty slice.\nRemoves the last item of the slice and returns it.\nPushes <code>item</code> to the end of the slice.\nRemoves item from position <code>index</code> of the slice, shifting …\nReserves at least this much additional capacity.\nSets the length of the slice to <code>len</code>.\nShortens the slice by keeping the last <code>len</code> items.\nCreates a new empty slice with the given capacity.\nA destructive iterator over a <code>SList</code>.\nA non-destructive iterator over a <code>SList</code>.\nA non-destructive iterator over a <code>SList</code>.\nA list of items of type <code>T</code>.\nReturns the underlying pointer.\nReturns the underlying pointer.\nReturns a reference to the last item of the list, if any.\nReturns a mutable reference to the last item of the list, …\nRemoves all items from the list.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>SList</code> around a list.\nCreate a new <code>SList</code> around a list.\nCreate a new <code>SList</code> around a list.\nReturns a reference to the first item of the list, if any.\nReturns a mutable reference to the first item of the list, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the list and returns the underlying pointer.\nCheck if the list is empty.\nCreate a non-destructive iterator over the <code>SList</code>.\nCreate a non-destructive mutable iterator over the <code>SList</code>.\nReturns the length of the list.\nCreates a new empty list.\nRemoves the back item from the list, if any.\nRemoves the front item from the list, if any.\nAppends the new item to the back of the list.\nPrepends the new item to the front of the list.\nOnly keeps the item in the list for which <code>f</code> returns <code>true</code>.\nReverse the list.\nSorts the list.\nSorts the list.\nA trait to accept both <code>&amp;[T]</code> or <code>StrV</code> as an argument.\n<code>NULL</code>-terminated array of <code>NULL</code>-terminated strings.\nReturns the underlying pointer.\nBorrows this slice as a <code>&amp;[GStringPtr]</code>.\nReturns the remaining items as slice.\nReturns the capacity of the slice.\nRemoves all items from the slice.\nChecks whether the <code>StrV</code> contains the specified string\nClones and appends all elements in <code>slice</code> to the slice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows a C array.\nBorrows a C array.\nCreate a new <code>StrV</code> around a <code>NULL</code>-terminated C array.\nCreate a new <code>StrV</code> around a C array.\nCreate a new <code>StrV</code> around a <code>NULL</code>-terminated C array.\nCreate a new <code>StrV</code> around a C array.\nCreate a new <code>StrV</code> around a <code>NULL</code>-terminated C array.\nCreate a new <code>StrV</code> around a C array.\nInserts <code>item</code> at position <code>index</code> of the slice, shifting all …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the slice and returns the underlying pointer.\nReturns <code>true</code> if the slice is empty.\nJoins the strings into a longer string, with an optional …\nGets the length of the slice.\nCreates a new empty slice.\nRemoves the last item of the slice and returns it.\nPushes <code>item</code> to the end of the slice.\nRemoves item from position <code>index</code> of the slice, shifting …\nReserves at least this much additional capacity.\nRuns the given closure with a <code>NULL</code>-terminated array.\nSets the length of the slice to <code>len</code>.\nSwaps item from position <code>index</code> of the slice and returns it.\nShortens the slice by keeping the last <code>len</code> items.\nCreates a new empty slice with the given capacity.\nRepresentation of an <code>enum</code> for dynamically, at runtime, …\nRepresentation of a single enum value of an <code>EnumClass</code>. A …\nRepresentation of enum values wrapped by <code>EnumValuesStorage</code>\nStorage of enum values.\nhelper trait to define the zero value and the associated …\nRepresentation of enumeration values wrapped by …\nStorage of enumeration values terminated by a zero value. …\nBuilder for conveniently setting/unsetting flags and …\nRepresentation of a <code>flags</code> for dynamically, at runtime, …\nRepresentation of a single flags value of a <code>FlagsClass</code>. A …\nRepresentation of flags values wrapped by …\nStorage of flags values.\nAn error returned from the <code>get</code> function on a <code>Value</code> for …\nAn error returned from the <code>get</code> function on a <code>Value</code> for …\nThese are logical ids for special directories which are …\nConverts to the final <code>Value</code>, unless any previous …\nReturns a new <code>FlagsBuilder</code> for conveniently …\nReturns a new <code>FlagsBuilder</code> for conveniently …\nComplete <code>TypeInfo</code> for an enum with values. This is an …\nComplete <code>TypeInfo</code> for the flags with values. This is an …\nDereferences the enumeration values as a slice, but …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a string of nicks <code>s</code> separated by <code>|</code> to an integer …\nConvert enum value from a <code>Value</code>.\nConvert flags values from a <code>Value</code>. This returns all flags …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the flags corresponding to integer <code>f</code> is set in …\nChecks if the flags corresponding to string name <code>name</code> is …\nChecks if the flags corresponding to string nick <code>nick</code> is …\nGet name corresponding to the value.\nGet name corresponding to the value.\nCreate a new <code>EnumClass</code> from a static type <code>T</code>.\nCreate a new <code>FlagsClass</code> from a static type <code>T</code>.\ncreates a new <code>EnumerationValuesStorage</code> with the given …\nGet nick corresponding to the value.\nGet nick corresponding to the value.\nSet flags value corresponding to integer <code>f</code> in <code>value</code>, if …\nSet flags corresponding to integer value <code>f</code>.\nSet flags value corresponding to string name <code>name</code> in <code>value</code>…\nSet flags corresponding to string name <code>name</code>.\nSet flags value corresponding to string nick <code>nick</code> in <code>value</code>…\nSet flags corresponding to string nick <code>nick</code>.\nConverts an integer <code>value</code> to a string of nicks separated …\nConverts integer <code>value</code> to a <code>Value</code>, if part of the enum.\nConverts integer <code>value</code> to a <code>Value</code>, if part of the flags.\nConvert enum value to a <code>Value</code>.\nConvert flags value to a <code>Value</code>.\nConverts string name <code>name</code> to a <code>Value</code>, if part of the enum.\nConverts string name <code>name</code> to a <code>Value</code>, if part of the flags.\nConverts string nick <code>nick</code> to a <code>Value</code>, if part of the enum.\nConverts string nick <code>nick</code> to a <code>Value</code>, if part of the flags.\n<code>Type</code> of the enum.\n<code>Type</code> of the flags.\nSafety\nSafety\nUnset flags value corresponding to integer <code>f</code> in <code>value</code>, if …\nUnsets flags corresponding to integer value <code>f</code>.\nUnset flags value corresponding to string name <code>name</code> in …\nUnset flags corresponding to string name <code>name</code>.\nUnset flags value corresponding to string nick <code>nick</code> in …\nUnset flags corresponding to string nick <code>nick</code>.\nGets <code>EnumValue</code> by integer <code>value</code>, if existing.\nGets <code>FlagsValue</code> by integer <code>value</code>, if existing.\nGet integer value corresponding to the value.\nGet integer value corresponding to the value.\nGets <code>EnumValue</code> by string name <code>name</code>, if existing.\nGets <code>FlagsValue</code> by string name <code>name</code>, if existing.\nGets <code>EnumValue</code> by string nick <code>nick</code>, if existing.\nGets <code>FlagsValue</code> by string nick <code>nick</code>, if existing.\nGets all <code>EnumValue</code> of this <code>EnumClass</code>.\nGets all <code>FlagsValue</code> of this <code>FlagsClass</code>.\nCreate a new <code>EnumClass</code> from a <code>Type</code>.\nCreate a new <code>FlagsClass</code> from a <code>Type</code>\nA generic error capable of representing various error …\n<code>GLib</code> error domain.\nReturn the inner pointer to the underlying C value.\nCopies the boxed type with the type-specific copy function.\nGets the integer representation of the variant.\nReturns the quark identifying the error domain.\nReturns the error domain quark\nTries to convert an integer code to an enum variant.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows the underlying C value.\nBorrows the underlying C value mutably.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the error domain matches <code>T</code>.\nTries to convert to a specific error enum.\nChecks if the error matches the specified domain and error …\nReturns the error message\nCreates an error with supplied error enum variant and …\nReturn the inner pointer to the underlying C value.\nReturns the argument unchanged.\nBorrows the underlying C value.\nCalls <code>U::from(self)</code>.\nBuilder for object property bindings.\nBorrowed reference to an object of type <code>T</code>.\nUpcasting and downcasting support.\nConvenience trait mirroring <code>Cast</code>, implemented on …\nClass struct of type <code>T</code>.\nReference to the class struct of type <code>T</code>.\ntype of the FFI Class structure.\ntype of the FFI Instance structure.\nGLib type: GObject with reference counted clone semantics.\nInterface struct of type <code>T</code> for some type.\nReference to a class struct of type <code>T</code>.\nDeclares the “is a” relationship.\nTrait implemented by class types.\nTrait implemented by interface types.\nMarker trait for the statically known possibility of …\nThe base class in the object hierarchy.\nTrait for class methods on <code>Object</code> and subclasses of it.\nAutomatically implemented by <code>ObjectSubclass</code> variants of …\nImplemented by types representing <code>glib::Object</code> and …\n<code>Value</code> type checker for object types.\nA weak reference to the object it was created for that can …\nA weak reference to an object.\nA handle to disconnect a weak ref notify closure.\nAdd a callback to be notified when the Object is disposed.\nAdd a callback to be notified when the Object is disposed.\nSet the binding flags to <code>BIDIRECTIONAL</code>.\nBind property <code>source_property</code> on this object to the …\nBlock a given signal handler.\nBuild the object with the provided properties.\nEstablish the property binding.\nCreate a new object builder for a specific type.\nCreate a new object builder for a specific type.\nReturns the class of the object.\nReturns the class of the object in the given type <code>T</code>.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nComparison for two GObjects.\nConnect to the signal <code>signal_name</code> on this object.\nConnect a closure to the signal <code>signal_name</code> on this object.\nConnect a closure to the signal <code>signal_id</code> on this object.\nConnect to the signal <code>signal_id</code> on this object.\nConnect to the signal <code>signal_name</code> on this object.\nConnect to the signal <code>signal_id</code> on this object.\nConnect to the <code>notify</code> signal of the object.\nConnect to the <code>notify</code> signal of the object.\nConnect to the <code>notify</code> signal of the object.\nConnect to the signal <code>signal_name</code> on this object.\nConnect to the signal <code>signal_id</code> on this object.\nReturn previously set arbitrary data of this object with …\nGets the default interface struct for <code>Self</code>.\nDisconnect a previously connected signal handler.\nTries to downcast to a subclass or interface implementor <code>T</code>.\nTries to downcast to a reference of its subclass or …\nCasts this class to a reference to a child type’s class …\nCasts this class to a mutable reference to a child type’…\nDowngrade this object to a weak reference.\nDowngrade to a weak reference.\nTries to cast to an object of type <code>T</code>. This handles …\nTries to cast to reference to an object of type <code>T</code>. This …\nEmit signal by signal id.\nEmit signal by its name.\nEmit signal by its name with details.\nEmit signal by its name with details.\nEmit signal by its name.\nEmit signal by signal id with details.\nEmit signal by signal id with details.\nSame as <code>Self::emit</code> but takes <code>Value</code> for the arguments.\nEquality for two GObjects.\nEquality for two GObjects.\nGet the <code>ParamSpec</code> of the property <code>property_name</code> of this …\nGet the <code>ParamSpec</code> of the property <code>property_name</code> of this …\nGet the <code>ParamSpec</code> of the property <code>property_name</code> of this …\nBind the properties with the given flags.\nFreeze all property notifications until the return guard …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the interface struct for <code>Self</code> of <code>klass</code>.\nGets the class struct for <code>Self</code> of <code>type_</code>.\nGets the default interface struct for <code>Self</code>.\nCheck if the object has a property <code>property_name</code> of the …\nCheck if the object class has a property <code>property_name</code> of …\nCheck if this interface has a property <code>property_name</code> of …\nHashes the memory address of this object.\nHashes the memory address of this object.\nGet the type id for the instance type of this interface.\nReturns the interface <code>T</code> of the object.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the binding flags to <code>INVERT_BOOLEAN</code>.\nReturns <code>true</code> if the object is an instance of (can be cast …\nReturn all <code>ParamSpec</code> of the properties of this object.\nReturn all <code>ParamSpec</code> of the properties of this object …\nReturn all <code>ParamSpec</code> of the properties of this interface.\nCreate a new instance of an object with the default …\nCreate a new empty weak reference.\nCreates a new borrowed object reference.\nCreate a new instance of an object of the given type with …\nNotify that the given property has changed its value.\nNotify that the given property has changed its value.\nReturns the <code>ObjectClass</code> of the object.\nGets the parent class struct, if any.\nGets the parent interface struct, if any.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nGets the property <code>property_name</code> of the object and cast it …\nSets property <code>name</code> to the given value <code>value</code>.\nSets property <code>name</code> using the given <code>ValueType</code> <code>V</code> built from …\nSets property <code>name</code> to the given inner value if the …\nSets property <code>name</code> using the given <code>ValueType</code> <code>V</code> built from …\nSets property <code>name</code> to the given inner value if <code>value</code> is …\nGet the type of the property <code>property_name</code> of this object.\nGet the type of the property <code>property_name</code> of this object …\nGet the type of the property <code>property_name</code> of this …\nGets the property <code>property_name</code> of the object.\nReturn previously set arbitrary data of this object with …\nReturns the strong reference count of this object.\nRuns the dispose mechanism of the object.\nSet this weak reference to the given object.\nSet arbitrary data on this object with the given <code>key</code>.\nSets multiple properties of the object at once.\nSets multiple properties of the object at once.\nSets the property <code>property_name</code> of the object to value …\nSets the property <code>property_name</code> of the object to value …\nSet arbitrary data on this object with the given <code>key</code>.\nRetrieve previously set arbitrary data of this object with …\nRetrieve previously set arbitrary data of this object with …\nStop emission of the currently emitted signal.\nStop emission of the currently emitted signal by the …\nSet the binding flags to <code>SYNC_CREATE</code>.\nTransform changed property values from the target object …\nTransform changed property values from the target object …\nTransform changed property values from the source object …\nTransform changed property values from the source object …\nReturns the type of the object.\nGets the type of this builder.\nGet the type id for this class.\nGet the type id for this interface.\nUnblock a given signal handler.\nCasts to <code>T</code> unconditionally.\nCasts to <code>&amp;T</code> unconditionally.\nUpcasts an object to a superclass or interface <code>T</code>.\nUpcasts an object to a reference of its superclass or …\nCasts this class to a reference to a parent type’s class.\nCasts this class to a mutable reference to a parent type’…\nTry to upgrade this weak reference to a strong reference.\nTry to upgrade this weak reference to a strong reference.\nLimits the lifetime of <code>closure</code> to the lifetime of the …\nCreate a new instance of an object of the given type with …\nCreate a new instance of an object with the default …\nA trait implemented by the various <code>ParamSpec</code> builder types.\nPreferred value to be used as setter for the associated …\nTrait containing all <code>TypePlugin</code> methods.\nDefault: <code>None</code>\nDefault: <code>None</code>\nDefault: <code>None</code>\nCalls the <code>complete_interface_info</code> function from the …\nCalls the <code>complete_interface_info</code> function from the …\nCalls the <code>complete_type_info</code> function from the …\nCalls the <code>complete_type_info</code> function from the …\nMark the property as construct\nMark the property as construct\nMark the property as construct\nMark the property as construct only\nMark the property as construct only\nMark the property as construct only\nImplementation detail.\nMark the property as deprecated\nMark the property as deprecated\nMark the property as deprecated\nMark the property as explicit notify\nMark the property as explicit notify\nMark the property as explicit notify\nDefault: <code>glib::ParamFlags::READWRITE</code>\nDefault: <code>glib::ParamFlags::READWRITE</code>\nDefault: <code>glib::ParamFlags::READWRITE</code>\nMark the property as lax validation\nMark the property as lax validation\nMark the property as lax validation\nBy default, the nickname of its redirect target will be …\nBy default, the nickname of its redirect target will be …\nBy default, the nickname of its redirect target will be …\nMark the property as read only and drops the READWRITE …\nMark the property as read only and drops the READWRITE …\nMark the property as read only and drops the READWRITE …\nMark the property as readwrite, it is the default value.\nMark the property as readwrite, it is the default value.\nMark the property as readwrite, it is the default value.\nImplementation detail.\nImplementation detail.\nImplementation detail.\nCalls the <code>unuse_plugin</code> function from the <code>GTypePluginClass</code> …\nCalls the <code>unuse_plugin</code> function from the <code>GTypePluginClass</code> …\nCalls the <code>use_plugin</code> function from the <code>GTypePluginClass</code> of …\nCalls the <code>use_plugin</code> function from the <code>GTypePluginClass</code> of …\nMark the property as write only and drops the READWRITE …\nMark the property as write only and drops the READWRITE …\nMark the property as write only and drops the READWRITE …\nA type that can be used as a property. It covers every …\nA container type implementing this trait can be read by …\nA container type implementing this trait can be written by …\nA container type implementing this trait can be written by …\nEncapsulates memory management logic for shared types.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSafety\nSafety\nWhether to invoke the other event handlers.\nThe id of a signal that is returned by <code>connect</code>.\nReturns the internal signal handler ID.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this is a <code>Proceed</code> variant.\nReturns <code>true</code> if this is a <code>Stop</code> variant.\nProcess identificator\nThe priority of sources\nThe id of a source that is returned by <code>idle_add</code> and …\nReturns the internal source ID.\nAdds a closure to be called by the main loop the returned …\nAdds a closure to be called by the main loop the returned …\nAdds a closure to be called by the main loop the returned …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdds a closure to be called by the default main loop when …\nAdds a closure to be called by the default main loop when …\nAdds a closure to be called by the default main loop when …\nAdds a closure to be called by the default main loop when …\nAdds a closure to be called by the default main loop when …\nAdds a closure to be called by the default main loop when …\nAdds a closure to be called by the main loop the return …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves the source with the given id <code>source_id</code> from the …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the default main loop at …\nAdds a closure to be called by the main loop the returned …\nAdds a closure to be called by the main loop the returned …\nAdds a closure to be called by the main loop the returned …\nAdds a closure to be called by the main loop the returned …\nAdds a closure to be called by the main loop the returned …\nAdds a closure to be called by the default main loop …\nAdds a closure to be called by the default main loop …\nAdds a closure to be called by the default main loop …\nAdds a closure to be called by the default main loop …\nAdds a closure to be called by the main loop the returned …\nReference-counted wrapper around an <code>ObjectSubclass</code> …\nWeak reference to an <code>ObjectSubclass</code> reference.\nThis module contains basic instance and class structs to …\nModule for registering boxed types for Rust types.\nDowngrade to a weak reference.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new reference-counting wrapper around <code>imp</code>.\nModule that contains all types needed for creating a …\nPrelude that re-exports all important traits from this …\nModule for registering shared types for Rust types.\nModule that contains the basic infrastructure for …\nUpgrade to a strong reference, if possible.\nA basic class struct that does not store any additional …\nA basic instance struct that does not store any additional …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllow name conflicts for this boxed type.\nTrait for defining boxed types.\nBoxed type name.\nRegister a boxed <code>glib::Type</code> ID for <code>T</code>.\nAllow name conflicts for this class.\nThe C class struct.\n<code>GObject</code> type name.\nThe central trait for defining a <code>GObject</code> interface.\nType methods required for an <code>ObjectInterface</code> …\nTrait for a type list of prerequisite object types.\nPrerequisites for this interface.\nGet interface from an instance.\nGet interface from an instance.\nInterface initialization.\nProperties installed for this interface.\nRegisters a <code>glib::Type</code> ID for <code>T::Class</code> as a dynamic type.\nRegister a <code>glib::Type</code> ID for <code>T::Class</code>.\nSignals installed for this interface.\nReturns the <code>glib::Type</code> ID of the interface.\nAdditional type initialization.\nReturns the list of types for this list.\nTrait containing only the property related functions of …\nExtension trait for <code>glib::Object</code>’s class struct.\nTrait for implementors of <code>glib::Object</code> subclasses.\nConstructed.\nProperties installed for this type.\nSimilar to <code>ObjectImpl</code> but auto-generated by the <code>Properties</code> …\nSimilar to <code>ObjectImpl</code> but auto-generated by the <code>Properties</code> …\nemits property change notification for a bunch of …\nDisposes of the object.\nFunction to be called when property change is notified for …\nChain up to the parent class’ implementation of …\nChain up to the parent class’ implementation of …\nChain up to the parent class’ implementation of …\nProperties installed for this type.\nProperty getter.\nProperty setter.\nChain up to parent class signal handler.\nSignals installed for this type.\nAllow name conflicts for this boxed type.\nThe inner type\nShared type name.\nThe inner refcounted type\nTrait for defining shared types.\nProvides access to a raw pointer to InnerType\nConverts a raw pointer to InnerType to a RefCounted object\nConstructs a SharedType from a RefCountedType\nConverts the RefCounted object to a raw pointer to …\nConverts the SharedType into its inner RefCountedType\nThe function used to increment the inner type refcount\nRegister a boxed <code>glib::Type</code> ID for <code>T</code>.\nSignal metadata.\nBuilder for signals.\nToken passed to signal class handlers.\nSignal ID.\nSignal invocation hint passed to signal accumulators.\nIn-depth information of a specific signal\nAccumulator for the return values of the signal.\nAction signals are signals that may freely be emitted on …\nBuild the signal.\nCreate a new builder for a signal.\nClass handler for this signal.\nThe signal is deprecated and will be removed in a future …\nThis signal supports “::detail” appendices to the …\nExplicitly set all flags.\nFlags of the signal.\nThe signal flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFind a SignalId by its <code>name</code>, and the <code>type</code> it connects to.\nVarargs signal emission will always collect the arguments, …\nThe number of parameters the user callback takes.\nName of the signal.\nFind the signal name.\nCreate a new Signal Identifier.\nNo emissions hooks are supported for this signal.\nSignals being emitted for an object while currently being …\nThe signal’s parameters.\nParameter types of the signal.\nThe parameters for the user callback.\nQueries more in-depth information about the current signal.\nThe signal’s returned value type.\nReturn type of the signal.\nThe return type for the user callback.\nThe signal’s returned value type.\nRun the signal class handler in the last emission stage.\nRun the signal class handler in the first emission stage.\nRun the signal class handler in the third emission stage.\nSignal ID.\nThe ID of the signal.\nThe name of the signal.\nType this signal was registered for.\nThe instance type this signal can be emitted for.\nLoads the module, registers one or more object subclasses …\nUnloads the module (see <code>TypeModuleExt::unuse</code>).\nIf this subclass is an abstract class or not.\nAllow name conflicts for this class.\nThe C class struct.\nTrait implemented by structs that implement a <code>GObject</code> C …\nHelper trait for macros to access a subclass or its …\nAn object that is currently being initialized.\nA newly registered <code>glib::Type</code> that is currently still …\nThe C instance struct.\nTrait implemented by structs that implement a <code>GObject</code> C …\nTrait implemented by any type implementing <code>InstanceStruct</code> …\nTrait for a type list of interfaces.\nTrait implemented by structs that implement a …\nList of interfaces implemented by this type.\nTrait for implementable interfaces.\nTrait for subclassable class structs.\n<code>GObject</code> type name.\nThe central trait for subclassing a <code>GObject</code> type.\nExtension methods for all <code>ObjectSubclass</code> impls.\nTrait implemented by any type implementing <code>ObjectSubclassIs</code>…\nType methods required for an <code>ObjectSubclass</code> implementation.\nParent Rust type to inherit from.\nCorresponding object subclass type for this instance …\nCorresponding object subclass type for this class struct.\nCorresponding object interface type for this class struct.\nWrapper around this subclass defined with <code>wrapper!</code>\nType-specific data that is filled in during type creation.\nReturns a pointer to the object.\nReturns a reference to the object.\nReturns the class struct for this specific instance.\nReturns a pointer to the class implementation specific …\nGets a mutable reference of the class implementation …\nOverride the vfuncs of all parent types.\nOverride the virtual methods of this class for the given …\nClass initialization.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the implementation from an instance.\nReturns the implementation from an instance.\nReturns the list of types and corresponding interface …\nReturns the implementation for from this instance struct, …\nReturns the implementation (the private Rust struct) of …\nReturns the offset of the private implementation struct in …")