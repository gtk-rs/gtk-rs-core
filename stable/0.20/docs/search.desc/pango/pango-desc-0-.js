searchState.loadedDescShard("pango", 0, "Rust Pango bindings\nWhether the segment should be shifted to center around the …\nWhether this run holds ellipsized text.\nWhether to add a hyphen at the end of the run during …\nValue for @start_index in <code>Attribute</code> that indicates the …\nValue for @end_index in <code>Attribute</code> that indicates the end …\nline height (<code>AttrInt</code>). Since: 1.50\nfont size in pixels scaled by <code>PANGO_SCALE</code> (<code>AttrInt</code>)\nAhom. Since: 1.40\nRight-to-Left Arabic\n<code>Alignment</code> describes how to align the lines of a <code>Layout</code> …\nA font with all characters replaced by smaller variants of …\nA font with all characters replaced by smaller variants of …\nwhether breaks are allowed (<code>AttrInt</code>). Since 1.44\nArabic Number\nThe <code>Analysis</code> structure stores information about the …\nAnatolian Hieroglyphs. Since: 1.40\nThe character is represented as basically the correct …\nArabic\nArmenian\nThe <code>AttrClass</code> structure stores the type and operations for …\nGLib type: Boxed type with copy-on-clone semantics.\nGLib type: Boxed type with copy-on-clone semantics.\nGLib type: Boxed type with copy-on-clone semantics.\nGLib type: Boxed type with copy-on-clone semantics.\nGLib type: Boxed type with copy-on-clone semantics.\nA <code>AttrIterator</code> is used to iterate through a <code>AttrList</code>.\nGLib type: Boxed type with copy-on-clone semantics.\nA <code>AttrList</code> represents a list of attributes that apply to a …\nGLib type: Boxed type with copy-on-clone semantics.\nGLib type: Boxed type with copy-on-clone semantics.\nGLib type: Boxed type with copy-on-clone semantics.\nThe <code>AttrType</code> distinguishes between different types of …\nThe <code>Attribute</code> structure represents the common portions of …\nGravity is resolved from the context matrix\nParagraph Separator\nbackground color (<code>AttrColor</code>)\nthe area behind the text\nbackground alpha (<code>AttrInt</code>). Since 1.38\nBalinese. Since 1.14\nAn enumeration that affects baseline shifts between runs.\nbaseline displacement (<code>AttrInt</code>). Since 1.50\nBassa. Since: 1.40\nBatak. Since 1.32\nBengali\n<code>BidiType</code> represents the bidirectional character type of a …\nBoundary Neutral\nthe bold weight (= 700)\nthe book weight (= 380) Since: 1.24)\nBopomofo\nBrahmi. Since 1.32\nBraille\nBuginese. Since 1.10\nBuhid\nApply context information from the serialization to the …\nInclude context information\nCanadian Aboriginal\nDisplay the first character of a word in titlecase\nCarian. Since 1.20.1\nCaucasian Albanian. Since: 1.40\nCenter the line within the available space\nthe text is centered at the tab stop position until the …\nChakma. Since: 1.32\nCham. Since 1.20.1\nwrap lines at character boundaries.\nCherokee\nThe <code>Color</code> structure is used to represent a color in an …\na character used by multiple different scripts\ncondensed width\nA <code>Context</code> stores global information used to control the …\nCoptic\nA <code>Coverage</code> structure is a map from Unicode characters to …\n<code>CoverageLevel</code> is used to indicate how well a font can …\nCommon Number Separator\nCuneiform. Since 1.14\nCypriot\nCyrillic\nDefault behavior\nDefault behavior\ntext before the first occurrence of the decimal point …\nDeseret\nDevanagari\n<code>Direction</code> represents a direction in the Unicode …\na double underline should be drawn\nLike @PANGO_UNDERLINE_DOUBLE, but drawn continuously …\nDuployan. Since: 1.40\nGlyphs are rotated 90 degrees counter-clockwise. \nElbasan. Since: 1.40\n<code>EllipsizeMode</code> describes what sort of ellipsization should …\nEuropean Number\nOmit characters at the end of the text\nan underline indicating an error should be drawn below. …\nLike @PANGO_UNDERLINE_ERROR, but drawn continuously across …\nEuropean Number Separator\nEuropean Number Terminator\nEthiopic\nThe character is represented as the correct graphical form.\nexpanded width\nextra condensed width\nextra expanded width\nthe font family is specified.\nwhether fallback is enabled (<code>AttrInt</code>)\nThe character is represented in a way that may be …\nfont family name list (<code>AttrString</code>)\nA <code>Font</code> is used to represent a font in a …\nfont description (<code>AttrFontDesc</code>)\nA <code>FontDescription</code> describes a font in an …\nA <code>FontFace</code> is used to represent a group of fonts with the …\nA <code>FontFamily</code> is used to represent a family of related font …\nOpenType font features (<code>AttrFontFeatures</code>). Since 1.38\nA <code>FontMap</code> represents the set of fonts available for a …\nThe bits in a <code>FontMask</code> correspond to the set fields in a …\nA <code>FontMetrics</code> structure holds the overall metric …\nAn enumeration that affects font sizes for superscript and …\nfont-relative size change (<code>AttrInt</code>). Since 1.50\nA <code>Fontset</code> represents a set of <code>Font</code> to use when rendering …\n<code>FontsetSimple</code> is a implementation of the abstract <code>Fontset</code> …\nforeground color (<code>AttrColor</code>)\nthe text itself\nforeground alpha (<code>AttrInt</code>). Since 1.38\nFirst strong isolate. Since 1.48.6\nA <code>PangoGlyph</code> value that indicates a zero-width empty glpyh.\nA <code>PangoGlyph</code> value for invalid input.\nFlag used in <code>PangoGlyph</code> to turn a <code>gunichar</code> value of a …\nthe font gravity is specified (Since: 1.16.)\nGeorgian\nGlagolitic. Since 1.10\nThe <code>GlyphGeometry</code> structure contains width and positioning …\nA <code>GlyphInfo</code> structure represents a single glyph with …\nA <code>GlyphItem</code> is a pair of a <code>Item</code> and the glyphs resulting …\nA <code>GlyphItemIter</code> is an iterator over the clusters in a …\nA <code>GlyphString</code> is used to store strings of glyphs with …\nGothic\nGrantha. Since: 1.40\n<code>Gravity</code> represents the orientation of glyphs in a segment …\nbase text gravity (<code>AttrInt</code>)\n<code>GravityHint</code> defines how horizontal scripts should behave …\ngravity hint (<code>AttrInt</code>)\nGreek\nGujarati\nGurmukhi\nHan\nHangul\nHanunoo\nHatran. Since: 1.40\nthe heavy weight (= 900)\nHebrew\nHiragana\nThe result of <code>LayoutLine::x_to_index</code>.\nRender default-ignorable Unicode characters visibly\na mark glyph that takes its script from the base glyph to …\nwhether to insert hyphens at intra-word line breaks (…\ndoes not happen\na value never returned from pango_script_for_unichar()\nthe font is slanted in an italic style.\nThe <code>Item</code> structure stores information about a segment of …\nKannada\nKatakana\nKayah Li. Since 1.20.1\nKharoshthi. Since 1.10\nKhmer\nKjohki. Since: 1.40\nKhudawadi, Sindhi. Since: 1.40\nLeft-to-Right\nRender line breaks visibly\nThe <code>Language</code> structure is used to represent a language.\nlanguage (<code>AttrLanguage</code>)\nLao\nLatin\nA <code>Layout</code> structure represents an entire paragraph of text.\nFlags that influence the behavior of …\nA <code>LayoutIter</code> can be used to iterate over the visual …\nA <code>LayoutLine</code> represents one of the lines resulting from …\nFlags that influence the behavior of <code>Layout::serialize()</code>.\nPut all available space on the right\nthe text appears to the right of the tab stop position\nLepcha. Since 1.20.1\nletter spacing (<code>AttrInt</code>)\nthe light weight (= 300)\nLimbu\nfor scripts not in their natural direction (eg. Latin in …\nline height factor (<code>AttrFloat</code>). Since: 1.50\nLinear A. Since: 1.40\nLinear B\na single underline should be drawn at a position beneath …\nDisplay letters and numbers as lowercase\nLeft-to-Right Embedding\nLeft-to-Right isolate. Since 1.48.6\nLeft-to-Right Override\nA strong left-to-right direction\nLycian. Since 1.20.1\nLydian. Since 1.20.1\nMahajani. Since: 1.40\nMalayalam\nMandaic. Since 1.32\nManichaean. Since: 1.40\nA <code>Matrix</code> specifies a transformation between user-space and …\nthe medium weight (= 500) Since: 1.24\nMende Kikakui. Since: 1.40\nMeroitic Cursive. Since: 1.32\nMeroitic Hieroglyphs. Since: 1.32\nMiao. Since: 1.32\nOmit characters in the middle of the text\nModi. Since: 1.40\nMongolian\nMro. Since: 1.40\nMultani. Since: 1.40\nMyanmar\nDefault value\nNo special treatment for invisible characters\nNabataean. Since: 1.40\nscripts will take their natural gravity based on the base …\nNo direction specified\nNew Tai Lue. Since 1.10\nN’Ko. Since 1.14\nLeave the baseline unchanged\nThe character is not representable with the font.\nNo ellipsization\nLeave the font size unchanged\nno overline should be drawn\nLeave text unchanged\nno underline should be drawn\nthe normal width\nthe font is upright.\nA normal font.\nthe default weight (= 400)\nGlyphs are upside-down. \nNonspacing Mark\nInclude information about the formatted output\nthe font is slanted, but in a roman style.\nOgham\nOl Chiki. Since 1.20.1\nOld Hungarian. Since: 1.40\nOld Italic\nOld North Arabian. Since: 1.40\nOld Permic. Since: 1.40\nOld Persian. Since 1.10\nOther Neutrals\nOriya\nOsmanya\nThe <code>Overline</code> enumeration is used to specify whether text …\nwhether the text has an overline (<code>AttrInt</code>). Since 1.46\noverlines\noverline color (<code>AttrColor</code>). Since 1.46\nPahawh Hmong. Since: 1.40\nPalmyrene. Since: 1.40\nPau Cin Hau. Since: 1.40\nPop Directional Format\nPop directional isolate. Since 1.48.6\nA font with the lower case characters replaced by smaller …\nPhags-pa. Since 1.14\nPhoenician. Since 1.14\nPsalter Pahlavi. Since: 1.40\nRight-to-Left\nRound glyph positions and widths to whole device units …\nThe <code>Rectangle</code> structure represents a rectangle.\nRejang. Since 1.20.1\n<code>RenderPart</code> defines different items to render for such …\n<code>Renderer</code> is a base class for objects that can render text …\nPut all available space on the left\nthe text appears to the left of the tab stop position …\nbaseline displacement (<code>AttrInt</code>)\nRight-to-Left Embedding\nRight-to-Left isolate. Since 1.48.6\nRight-to-Left Override\nA strong right-to-left direction\nRunic\nSegment Separator\nThe scale between dimensions used for Pango distances and …\nThe scale factor for one magnification step (1.2).\nThe scale factor for normal size (1.0).\nThe scale factor for one shrinking step (1 / 1.2).\nThe scale factor for three magnification steps (1.2 * 1.2 …\nThe scale factor for three shrinking steps (1 / (1.2 * 1.2 …\nThe scale factor for two magnification steps (1.2 * 1.2).\nThe scale factor for two shrinking steps (1 / (1.2 * 1.2)).\nthe font size is specified.\nRender spaces, tabs and newlines visibly\nthe font stretch is specified.\nthe font style is specified.\nSaurashtra. Since 1.20.1\nfont size scale factor (<code>AttrFloat</code>)\nThe <code>Script</code> enumeration identifies different writing …\nA <code>ScriptIter</code> is used to iterate through a string and …\nsemi condensed width\nsemi expanded width\nthe semibold weight (= 600)\nthe semilight weight (= 350) Since: 1.36.7\noverride segmentation to classify the range of the …\nshape (<code>AttrShape</code>)\nFlags influencing the shaping process.\nSharada. Since: 1.32\nShavian\nhow to render invisible characters (<code>AttrInt</code>). Since 1.44\nThese flags affect how Pango treats characters that are …\nSiddham. Since: 1.40\nSignwriting. Since: 1.40\nDraw a single line above the ink extents of the text being …\na single underline should be drawn\nLike @PANGO_UNDERLINE_SINGLE, but drawn continuously …\nSinhala\nfont size in points scaled by <code>PANGO_SCALE</code> (<code>AttrInt</code>)\nChange the font to a size suitable for Small Caps\nA font with the lower case characters replaced by smaller …\nSora Sompeng. Since: 1.32\nGlyphs stand upright (default) \nOmit characters at the start of the text\nAn enumeration specifying the width of the font relative …\nfont stretch (<code>AttrInt</code>)\nwhether the text is struck-through (<code>AttrInt</code>)\nstrikethrough lines\nstrikethrough color (<code>AttrColor</code>)\nalways use the base gravity set, regardless of the script.\nAn enumeration specifying the various slant styles …\nfont slant style (<code>AttrInt</code>)\nShift the baseline to the subscript position, relative to …\nChange the font to a size suitable for subscripts\nSundanese. Since 1.20.1\nShift the baseline to the superscript position, relative …\nChange the font to a size suitable for superscripts\nSyloti Nagri. Since 1.10\nSyriac\n<code>TabAlign</code> specifies where the text appears relative to the …\nA <code>TabArray</code> contains an array of tab stops.\nTagalog\nTagbanwa\nTai Le\nTakri. Since: 1.32\nTamil\nTelugu\nAn enumeration that affects how Pango treats characters …\nThaana\nThai\nthe thin weight (= 100) Since: 1.24\nTibetan\nTifinagh. Since 1.10\nTirhuta. Since: 1.40\nA font with capital letters that are more suitable for …\nDeprecated value; treated the same as <code>PANGO_DIRECTION_RTL</code>.\nDeprecated value; treated the same as <code>PANGO_DIRECTION_LTR</code>\nUgaritic\nultra condensed width\nultra expanded width\nthe ultrabold weight (= 800)\nthe ultraheavy weight (= 1000) Since: 1.24\nthe ultralight weight (= 200)\nThe <code>Underline</code> enumeration is used to specify whether text …\nwhether the text has an underline (<code>AttrInt</code>)\nunderlines\nunderline color (<code>AttrColor</code>)\nA font with the upper case characters replaced by smaller …\nan unassigned code point. Since 1.14\nDisplay letters and numbers as uppercase\nthe font variant is specified.\nOpenType font variations are specified (Since: 1.42)\nVai. Since 1.20.1\nAn enumeration specifying capitalization variant of the …\nfont variant (normal or small caps) (<code>AttrInt</code>)\nthe font weight is specified.\nWarang Citi. Since: 1.40\nA weak left-to-right direction\nA weak right-to-left direction\nAn enumeration specifying the weight (boldness) of a font.\nfont weight (<code>AttrInt</code>)\nGlyphs are rotated 90 degrees clockwise. \noverride segmentation to classify the range of the …\nwrap lines at word boundaries.\nwrap lines at word boundaries, but fall back to character …\n<code>WrapMode</code> describes how to wrap the lines of a <code>Layout</code> to …\nWhitespace\nYi\nGets the alignment for the layout: how partial lines are …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nAdds a font to the fontset.\nSplits a shaped item (<code>GlyphItem</code>) into multiple items based …\nAdd attributes to a <code>Item</code>.\nGets the approximate character width for a font metrics …\nGets the approximate digit width for a font metrics …\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nReturn the inner pointer to the underlying C value.\nGets the ascent from a font metrics structure.\nDetermines whether @self is on the last line of the layout.\nGets the attribute list for the layout, if any.\nGets a list of all attributes in @self.\nRetrieves the base direction for the context.\nRetrieves the base gravity for the context.\nGets the Y position of baseline of the first line in @self.\nGets the Y position of the current line’s baseline, in …\nDetermines if the style attributes of @new_match are a …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGiven an index within a layout, determines the positions …\nInsert the given attribute into the <code>AttrList</code>.\nForces a change in the context, which will cause any <code>Layout</code>\nGets the extents of the current character, in layout …\nReturns the character offset of the item from the beginning\nReturns the number of Unicode characters in the the text …\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nCopies the boxed type with the type-specific copy function.\nCopies the inline boxed type by value with the …\nCopies the boxed type with the type-specific copy function.\nMakes a clone of this shared reference.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nMakes a clone of this shared reference.\nCopies the inline boxed type by value with the …\nCopies the boxed type with the type-specific copy function.\nCopies the inline boxed type by value with the …\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nCopies the boxed type with the type-specific copy function.\nMakes a clone of this shared reference.\nCopies the inline boxed type by value with the …\nCopies the inline boxed type by value with the …\nCopies the inline boxed type by value with the …\nGets the extents of the current cluster, in layout …\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nChanges the transformation represented by @self to be the …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nRetrieves the <code>Context</code> used for this layout.\nForces recomputation of any state in the <code>Layout</code> that might …\nGiven an index within a layout, determines the positions …\nGets the Unicode character to use as decimal point.\nReturns the <code>Language</code> for the current locale of the process.\nGets the descent from a font metrics structure.\nLoads data previously created via <code>FontExt::serialize()</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGets the text direction at the given character position in …\nGets the type of ellipsization being performed for @self.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nComputes the logical and ink extents of @self.\nCompute the logical and ink extents of a glyph string.\nComputes the logical and ink extents of a layout line.\nComputes the extents of a sub-portion of a glyph string.\nConverts extents from Pango units to device units.\nGets the family name field of a font description.\nGiven a <code>AttrList</code> and callback function, removes any …\nSearches a string the first character that has a strong …\nLocates a paragraph boundary in @text.\nRetrieve the default font description for the context.\nGets the font description for the layout, if any.\nGets the <code>FontMap</code> used to look up fonts for this context.\nReturns the scale factor of a matrix on the height of the …\nCalculates the scale factor of a matrix on the width and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert data generated from <code>to_bytes()</code> back to a <code>Coverage</code>.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nBorrows the underlying C value mutably.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nDeserializes a <code>AttrList</code> from a string.\nCreates a new font description from a string …\nConvert a language tag to a <code>Language</code>.\nDeserializes a <code>TabArray</code> from a string.\nDetermine whether a particular index is covered by @self.\nRetrieves the gravity for the context.\nGets the gravity field of a font description.\nRetrieves the gravity hint for the context.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nGets the height of layout used for ellipsization.\nGets the line height from a font metrics structure.\nComputes the height of the line, as the maximum of the …\nDetermines if @script is one of the scripts used to write …\nGets the paragraph indent width in Pango units.\nGets the current byte index.\nThe UTF-8 byte offset of the grapheme closest to the …\nConverts from byte @index_ within the @self to line and X …\nConverts from an index within a <code>Layout</code> to the onscreen …\nConverts from character position to x position.\nConverts an index within a line to a X position.\nInsert the given attribute into the <code>AttrList</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert the given attribute into the <code>AttrList</code>.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nGets whether to calculate the base direction for the layout\nQueries whether the layout had to ellipsize any paragraphs.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether or not the position was within the bounds of the …\nGets whether each complete line should be stretched to …\nGets whether the last line should be stretched to fill the …\nReturns whether this is the first line of the paragraph.\nReturns <code>true</code> if the tab positions are in pixels, <code>false</code> if …\nReturns whether font rendering with this context should …\nObtains whether @self is in single paragraph mode.\nDetermines whether the size of the font is in points (not …\nQueries whether the layout had to wrap any paragraphs.\nChecks if a character that should not be normally rendered.\nBreaks a piece of text into segments with consistent …\nLike <code>pango_itemize()</code>, but with an explicitly specified …\nReturns an iterator to iterate over the visual extents of …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nCreate a iterator initialized to the beginning of the list.\nRetrieves the global language tag for the context.\nGets the layout associated with a <code>LayoutIter</code>.\nObtains the extents of the <code>Layout</code> being iterated over.\nReturns the length of the line, in bytes.\nRetrieves a particular line from a <code>Layout</code>.\nGets the current line.\nRetrieves the count of lines for the @self.\nObtains the extents of the current line.\nRetrieves a particular line from a <code>Layout</code>.\nGets the current line for read-only access.\nGets the line spacing factor of @self.\nDivides the vertical space in the <code>Layout</code> being iterated …\nReturns the lines of the @self as a list.\nReturns the lines of the @self as a list.\nList all families for a context.\nLoads the font in one of the fontmaps in the context that …\nLoad a set of fonts in the context that can be used to …\nGiven a <code>GlyphItem</code> and the corresponding text, determine the\nGiven a <code>GlyphString</code> and corresponding text, determine the …\nFinishes parsing markup.\nIncrementally parses marked-up text to create a plain-text …\nChecks if a language tag matches one of the elements in a …\nGets the transformation matrix that will be applied when …\nSet the coverage for each index in @self to be the max …\nMerges the fields that are set in @desc_to_merge into the …\nGet overall metric information for a particular font …\nComputes a new cursor position from an old position and a …\nCreates a new <code>Context</code> initialized to default values.\nCreates a new <code>FontsetSimple</code> for the given language.\nCreate a new <code>Layout</code> object with attributes initialized to …\nCreate a new empty attribute list with a reference count …\nCreates a new font description structure with all fields …\nCreate a new <code>GlyphString</code>.\nCreates a new <code>Item</code> structure initialized to default values.\nCreates an array of @initial_size tab stops.\nCreate a new font description attribute.\nCreate a new font features tag attribute.\nCreate a new language tag attribute.\nCreate a new shape attribute.\nCreate a new font-size attribute in fractional points.\nCreate a new <code>Coverage</code>\nMoves @self forward to the next character in visual order.\nMoves @self forward to the next cluster in visual order.\nMoves @self forward to the start of the next line.\nMoves @self forward to the next run in visual order.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nFill in the fields of a color from a string specification.\nParses marked-up text to create a plain-text string and an …\nParses a font stretch.\nParses a font style.\nParses a font variant.\nParses a font weight.\nFill in the fields of a color from a string specification.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nComputes the logical and ink extents of @self in device …\nComputes the logical and ink extents of @self in device …\nDetermines the logical width and height of a <code>Layout</code> in …\nReturns the list of languages that the user prefers.\nTraits and essential types intended for blanket imports.\nQuantizes the thickness and position of a line to whole …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReorder items from logical order to visual order.\nResizes a tab array.\nReturns the resolved direction of the line.\nChanges the transformation represented by @self to be the …\nGets the current run.\nGets the Y position of the current run’s baseline, in …\nGets the extents of the current run in layout coordinates.\nGets the current run for read-only access.\nGet a string that is representative of the characters …\nChanges the transformation represented by @self to be the …\nDetermines the scripts used to to write @self.\nReturns the current serial number of @self.\nReturns the current serial number of @self.\nSerializes the @self for later deserialization via …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nModify a particular index within @self\nSets the size field of a font description, in device units.\nSets the alignment for the layout: how partial lines are …\nSets the text attributes for a layout object.\nSets whether to calculate the base direction for the …\nSets the base direction for the context.\nSets the base gravity for the context.\nSets the Unicode character to use as decimal point.\nSets the type of ellipsization being performed for @self.\nSets the family name field of a font description.\nDetermines which fields in a font description have been …\nSet the default font description for the context\nSets the default font description for the layout.\nSets the font map to be searched when fonts are looked-up …\nSets the gravity field of a font description.\nSets the gravity hint for the context.\nSets the height to which the <code>Layout</code> should be ellipsized …\nSets the width in Pango units to indent each paragraph.\nSets whether each complete line should be stretched to …\nSets whether the last line should be stretched to fill the …\nSets the global language tag for the context.\nSets a factor for line spacing.\nSets the layout text and attribute list from marked-up …\nSets the layout text and attribute list from marked-up …\nSets the transformation matrix that will be applied when …\nSets whether positions in this array are specified in …\nSets whether font rendering with this context should round …\nSets the single paragraph mode of @self.\nSets the size field of a font description in fractional …\nResize a glyph string to the given length.\nSets the amount of spacing in Pango units between the …\nSets the stretch field of a font description.\nSets the style field of a <code>FontDescription</code>.\nSets the alignment and location of a tab stop.\nSets the tabs to use for @self, overriding the default …\nSets the text of the layout.\nSets the variant field of a font description.\nSets the variations field of a font description.\nSets the variations field of a font description.\nSets the weight field of a font description.\nSets the width to which the lines of the <code>Layout</code> should …\nSets the wrap mode.\nConvert the characters in @text into glyphs.\nConvert the characters in @text into glyphs.\nConvert the characters in @text into glyphs.\nReturns the number of fonts in the fontset.\nDetermines the logical width and height of a <code>Layout</code> in …\nGets the size field of a font description.\nGets the number of tab stops in @self.\nGets the slant ratio of a matrix.\nUtility function to ensure that the tab stops are in …\nGets the amount of spacing between the lines of the layout.\nThis function opens up a hole in @self, fills it in with …\nModifies @self to cover only the text after @split_index, …\nModifies @self to cover only the text after @split_index, …\nReturns the start index of the line, as byte index into …\nGets the stretch field of a font description.\nGets the suggested position to draw the strikethrough.\nGets the suggested thickness to draw for the strikethrough.\nGets the style field of a <code>FontDescription</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGets the alignment and position of a tab stop.\nGets the current <code>TabArray</code> used by this layout.\nIf non-<code>None</code>, @alignments and @locations are filled with …\nGets the text in the layout.\nConvert a <code>Coverage</code> structure into a flat binary format.\nCreates a filename representation of a font description.\nSerializes a <code>AttrList</code> to a string.\nReturns a textual specification of @self.\nCreates a string representation of a font description.\nGets the RFC-3066 format string representing the given …\nSerializes a <code>TabArray</code> to a string.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe codepoint within the grapheme of the position.\nTransforms the distance vector (@dx,@dy) by @self.\nFirst transforms the @rect using @self, then calculates …\nTransforms the point (@x, @y) by @self.\nFirst transforms @rect using @self, then calculates the …\nChanges the transformation represented by @self to be the …\nGets the suggested position to draw the underline.\nGets the suggested thickness to draw for the underline.\nDetermines the inherent direction of a character.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nConverts a floating-point number to Pango units.\nConverts a number in Pango units to floating-point.\nCounts the number of unknown glyphs in @self.\nUnsets some of the fields in a <code>FontDescription</code>.\nUpdate indices of attributes in @self for a change in the …\nGets the variant field of a <code>FontDescription</code>.\nGets the variations field of a font description.\nReturns the encoded version of Pango available at run-time.\nChecks that the Pango library in use is compatible with the\nReturns the version of Pango available at run-time.\nGets the weight field of a font description.\nGets the width to which the lines of the <code>Layout</code> should …\nComputes the logical width of the glyph string.\nGets the wrap mode for the layout.\nA convenience method to serialize a layout to a file.\nGets a list of visual ranges corresponding to a given …\nConvert from x offset to character position.\nConverts from x offset to the byte index of the …\nConverts from X and Y position within a layout to the byte …\nTrait containing all <code>Font</code> methods.\nTrait containing all <code>FontFace</code> methods.\nTrait containing all <code>FontFamily</code> methods.\nTrait containing all <code>FontMap</code> methods.\nTrait containing all <code>Fontset</code> methods.\nTrait containing all <code>Renderer</code> methods.\nDoes initial setup before rendering operations on @self.\nDoes initial setup before rendering operations on @self.\nGets the current alpha for the specified part.\nGets the current alpha for the specified part.\nForces a change in the context, which will cause any …\nForces a change in the context, which will cause any …\nGets the current rendering color for the specified part.\nGets the current rendering color for the specified part.\nComputes the coverage map for a given font and language …\nComputes the coverage map for a given font and language …\nCreates a <code>Context</code> connected to @self.\nCreates a <code>Context</code> connected to @self.\nCleans up after rendering operations on @self.\nCleans up after rendering operations on @self.\nReturns a description of the font, with font size set in …\nReturns a description of the font, with font size set in …\nReturns a font description that matches the face.\nReturns a font description that matches the face.\nReturns a description of the font, with absolute font size …\nReturns a description of the font, with absolute font size …\nDraw a squiggly line that approximately covers the given …\nDraw a squiggly line that approximately covers the given …\nDraws a single glyph with coordinates in device space.\nDraws a single glyph with coordinates in device space.\nDraws the glyphs in @glyph_item with the specified <code>Renderer</code>…\nDraws the glyphs in @glyph_item with the specified <code>Renderer</code>…\nDraws the glyphs in @glyphs with the specified <code>Renderer</code>.\nDraws the glyphs in @glyphs with the specified <code>Renderer</code>.\nDraws @layout with the specified <code>Renderer</code>.\nDraws @layout with the specified <code>Renderer</code>.\nDraws @line with the specified <code>Renderer</code>.\nDraws @line with the specified <code>Renderer</code>.\nDraws an axis-aligned rectangle in user space coordinates …\nDraws an axis-aligned rectangle in user space coordinates …\nDraws a trapezoid with the parallel sides aligned with the …\nDraws a trapezoid with the parallel sides aligned with the …\nGets the <code>FontFace</code> to which @self belongs.\nGets the <code>FontFace</code> to which @self belongs.\nGets the <code>FontFace</code> of @self with the given name.\nGets the <code>FontFace</code> of @self with the given name.\nGets a name representing the style of this face.\nGets a name representing the style of this face.\nGets the <code>FontFamily</code> that @self belongs to.\nGets the <code>FontFamily</code> that @self belongs to.\nGets a font family by name.\nGets a font family by name.\nReturns the font in the fontset that contains the best …\nReturns the font in the fontset that contains the best …\nGets the font map for which the font was created.\nGets the font map for which the font was created.\nIterates through all the fonts in a fontset, calling @func …\nIterates through all the fonts in a fontset, calling @func …\nGets the logical and ink extents of a glyph within a font.\nGets the logical and ink extents of a glyph within a font.\nReturns whether the font provides a glyph for this …\nReturns whether the font provides a glyph for this …\nA monospace font is a font designed for text display where …\nA monospace font is a font designed for text display where …\nReturns whether a <code>FontFace</code> is synthesized.\nReturns whether a <code>FontFace</code> is synthesized.\nA variable font is a font which has axes that can be …\nA variable font is a font which has axes that can be …\nGets the layout currently being rendered using @self.\nGets the layout currently being rendered using @self.\nGets the layout line currently being rendered using @self.\nGets the layout line currently being rendered using @self.\nLists the different font faces that make up @self.\nLists the different font faces that make up @self.\nList all families for a fontmap.\nList all families for a fontmap.\nList the available sizes for a font.\nList the available sizes for a font.\nLoad the font in the fontmap that is the closest match for …\nLoad the font in the fontmap that is the closest match for …\nLoad a set of fonts in the fontmap that can be used to …\nLoad a set of fonts in the fontmap that can be used to …\nGets the transformation matrix that will be applied when …\nGets the transformation matrix that will be applied when …\nGets overall metric information for a font.\nGets overall metric information for a font.\nGet overall metric information for the fonts in the …\nGet overall metric information for the fonts in the …\nGets the name of the family.\nGets the name of the family.\nInforms Pango that the way that the rendering is done for …\nInforms Pango that the way that the rendering is done for …\nReturns a new font that is like @font, except that its size\nReturns a new font that is like @font, except that its size\nReturns the current serial number of @self.\nReturns the current serial number of @self.\nSerializes the @self in a way that can be uniquely …\nSerializes the @self in a way that can be uniquely …\nSets the alpha for part of the rendering.\nSets the alpha for part of the rendering.\nSets the color for part of the rendering.\nSets the color for part of the rendering.\nSets the transformation matrix that will be applied when …\nSets the transformation matrix that will be applied when …")