(function() {
    var type_impls = Object.fromEntries([["glib",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CEnumerationValues%3CE%3E%3E-for-EnumerationValuesStorage%3CE,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/glib/enums.rs.html#1143-1150\">source</a><a href=\"#impl-AsRef%3CEnumerationValues%3CE%3E%3E-for-EnumerationValuesStorage%3CE,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;E: <a class=\"trait\" href=\"glib/enums/trait.EnumerationValue.html\" title=\"trait glib::enums::EnumerationValue\">EnumerationValue</a>&lt;E&gt;, const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"glib/enums/struct.EnumerationValues.html\" title=\"struct glib::enums::EnumerationValues\">EnumerationValues</a>&lt;E&gt;&gt; for <a class=\"struct\" href=\"glib/enums/struct.EnumerationValuesStorage.html\" title=\"struct glib::enums::EnumerationValuesStorage\">EnumerationValuesStorage</a>&lt;E, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/glib/enums.rs.html#1146-1149\">source</a><a href=\"#method.as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"glib/enums/struct.EnumerationValues.html\" title=\"struct glib::enums::EnumerationValues\">EnumerationValues</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<EnumerationValues<E>>","glib::enums::EnumValuesStorage","glib::enums::FlagsValuesStorage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnumerationValuesStorage%3CE,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/glib/enums.rs.html#1117-1141\">source</a><a href=\"#impl-EnumerationValuesStorage%3CE,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;E: <a class=\"trait\" href=\"glib/enums/trait.EnumerationValue.html\" title=\"trait glib::enums::EnumerationValue\">EnumerationValue</a>&lt;E&gt;, const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"glib/enums/struct.EnumerationValuesStorage.html\" title=\"struct glib::enums::EnumerationValuesStorage\">EnumerationValuesStorage</a>&lt;E, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/glib/enums.rs.html#1120-1140\">source</a><h4 class=\"code-header\">pub const fn <a href=\"glib/enums/struct.EnumerationValuesStorage.html#tymethod.new\" class=\"fn\">new</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(values: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[E; N]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>creates a new <code>EnumerationValuesStorage</code> with the given values and a final zero value.</p>\n</div></details></div></details>",0,"glib::enums::EnumValuesStorage","glib::enums::FlagsValuesStorage"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3623]}