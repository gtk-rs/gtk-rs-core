(function() {var implementors = {};
implementors["cairo"] = [{"text":"impl From&lt;Error&gt; for IoError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for IoError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for BorrowError","synthetic":false,"types":[]},{"text":"impl From&lt;StreamWithError&gt; for Error","synthetic":false,"types":[]}];
implementors["cairo_sys"] = [{"text":"impl From&lt;bool&gt; for cairo_bool_t","synthetic":false,"types":[]}];
implementors["gdk"] = [{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Atom","synthetic":false,"types":[]},{"text":"impl From&lt;u32&gt; for Key","synthetic":false,"types":[]},{"text":"impl From&lt;RectangleInt&gt; for Rectangle","synthetic":false,"types":[]}];
implementors["gio"] = [{"text":"impl From&lt;IOErrorEnum&gt; for ErrorKind","synthetic":false,"types":[]},{"text":"impl From&lt;IpAddr&gt; for InetAddress","synthetic":false,"types":[]},{"text":"impl From&lt;InetAddress&gt; for IpAddr","synthetic":false,"types":[]},{"text":"impl From&lt;SocketAddr&gt; for InetSocketAddress","synthetic":false,"types":[]},{"text":"impl From&lt;InetSocketAddress&gt; for SocketAddr","synthetic":false,"types":[]},{"text":"impl From&lt;ArgumentList&gt; for Vec&lt;OsString&gt;","synthetic":false,"types":[]}];
implementors["glib"] = [{"text":"impl&lt;T:&nbsp;ObjectType&gt; From&lt;WeakRef&lt;T&gt;&gt; for SendWeakRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Borrow&lt;[u8]&gt; + 'a&gt; From&lt;&amp;'a T&gt; for ByteArray","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Borrow&lt;[u8]&gt; + 'a&gt; From&lt;&amp;'a T&gt; for Bytes","synthetic":false,"types":[]},{"text":"impl From&lt;Char&gt; for char","synthetic":false,"types":[]},{"text":"impl From&lt;UChar&gt; for char","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Error&gt; From&lt;I&gt; for GlibNoneOrInvalidError&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;GString&gt; for String","synthetic":false,"types":[]},{"text":"impl From&lt;GString&gt; for Box&lt;str&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for GString","synthetic":false,"types":[]},{"text":"impl From&lt;Box&lt;str, Global&gt;&gt; for GString","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for GString","synthetic":false,"types":[]},{"text":"impl From&lt;Vec&lt;u8, Global&gt;&gt; for GString","synthetic":false,"types":[]},{"text":"impl From&lt;CString&gt; for GString","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a CStr&gt; for GString","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + SetValueOptional&gt; From&lt;Option&lt;&amp;'a T&gt;&gt; for Value","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + SetValue&gt; From&lt;&amp;'a T&gt; for Value","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;TypedValue&lt;T&gt;&gt; for Value","synthetic":false,"types":[]},{"text":"impl From&lt;SendValue&gt; for Value","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;FromValueOptional&lt;'a&gt; + SetValueOptional&gt; From&lt;Option&lt;&amp;'a T&gt;&gt; for TypedValue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;FromValueOptional&lt;'a&gt; + SetValue&gt; From&lt;&amp;'a T&gt; for TypedValue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Option&lt;&amp;'a str&gt;&gt; for TypedValue&lt;String&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for TypedValue&lt;String&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;TypedValue&lt;&amp;'a str&gt;&gt; for TypedValue&lt;String&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;TypedValue&lt;String&gt;&gt; for TypedValue&lt;&amp;'a str&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + SetValueOptional + Send&gt; From&lt;Option&lt;&amp;'a T&gt;&gt; for SendValue","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + SetValue + Send&gt; From&lt;&amp;'a T&gt; for SendValue","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; From&lt;TypedValue&lt;T&gt;&gt; for SendValue","synthetic":false,"types":[]},{"text":"impl From&lt;Variant&gt; for VariantDict","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;VariantType&gt; for Cow&lt;'a, VariantTy&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a VariantTy&gt; for Cow&lt;'a, VariantTy&gt;","synthetic":false,"types":[]}];
implementors["gtk"] = [{"text":"impl From&lt;IconSize&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;i32&gt; for IconSize","synthetic":false,"types":[]},{"text":"impl From&lt;ResponseType&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;i32&gt; for ResponseType","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()